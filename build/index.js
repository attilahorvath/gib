!function(){"use strict";var t="uniform mat4 projection;uniform mat4 view;attribute vec3 vertex0Position;attribute vec2 vertex1TexCoord;varying vec2 texCoord;void main(){texCoord=vertex1TexCoord;gl_Position=projection*view*vec4(vertex0Position,1.0);gl_PointSize=64.0;}",e="precision highp float;uniform sampler2D tex;varying vec2 texCoord;void main(){vec2 texCoord=mix((vec2(16.0)*texCoord)/vec2(128.0,32.0),(vec2(16.0)*(texCoord+vec2(1.0)))/vec2(128.0,32.0),gl_PointCoord);gl_FragColor=texture2D(tex,texCoord);if(gl_FragColor.a<0.1){discard;}}";const s=(t,e)=>{switch(e){case t.FLOAT:return 1;case t.FLOAT_VEC2:return 2;case t.FLOAT_VEC3:return 3;case t.FLOAT_VEC4:return 4;case t.FLOAT_MAT3:return 9;case t.FLOAT_MAT4:return 16}};class i{constructor(t,e,i){this.gl=t;const r=t.createShader(t.VERTEX_SHADER);t.shaderSource(r,e),t.compileShader(r);const h=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(h,i),t.compileShader(h),this.program=t.createProgram(),t.attachShader(this.program,r),t.attachShader(this.program,h),t.linkProgram(this.program),this.uniforms=[];const a=t.getProgramParameter(this.program,t.ACTIVE_UNIFORMS);for(let e=0;e<a;e++){const s=t.getActiveUniform(this.program,e),i=t.getUniformLocation(this.program,s.name);this[s.name]=null,this.uniforms.push({type:s.type,name:s.name,location:i})}this.attributes=[],this.stride=0;const n=t.getProgramParameter(this.program,t.ACTIVE_ATTRIBUTES);for(let e=0;e<n;e++){const i=t.getActiveAttrib(this.program,e),r=t.getAttribLocation(this.program,i.name),h=s(t,i.type);this.attributes.push({name:i.name,location:r,components:h}),this.stride+=4*h}this.attributes.sort((t,e)=>t.name<e.name?-1:1)}use(){this.gl.useProgram(this.program);let t=0;for(const e of this.attributes)this.gl.enableVertexAttribArray(e.location),this.gl.vertexAttribPointer(e.location,e.components,this.gl.FLOAT,!1,this.stride,t),t+=4*e.components;for(const t of this.uniforms)switch(t.type){case this.gl.FLOAT:this.gl.uniform1f(t.location,this[t.name]);break;case this.gl.FLOAT_VEC2:this.gl.uniform2fv(t.location,this[t.name]);break;case this.gl.FLOAT_MAT2:this.gl.uniformMatrix2fv(t.location,!1,this[t.name]);break;case this.gl.FLOAT_MAT4:this.gl.uniformMatrix4fv(t.location,!1,this[t.name])}}}class r{constructor(){const s=document.createElement("canvas");s.width=800,s.height=600,document.body.appendChild(s),this.gl=s.getContext("webgl",{antialias:!1}),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.clearColor(0,.53,1,1),this.spriteShader=new i(this.gl,t,e),this.projection=new Float32Array([.0025,0,0,0,0,-2/600,0,0,0,0,-1,0,-1,1,0,1]),this.view=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this.cameraX=0,this.cameraY=0,this.texture=this.gl.createTexture(),this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,1,1,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,new Uint8Array([0,0,255,255])),this.setUpTexture();const r=new Image;r.addEventListener("load",()=>{this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,r),this.setUpTexture()}),r.crossOrigin="",r.src="textures/tiles.png"}setUpTexture(){this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST)}tileTextureU(t){return 16*t/128}tileTextureV(t){return 16*t/32}clear(){this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)}update(){this.view[12]=-this.cameraX,this.view[13]=-this.cameraY}draw(t,e,s,i,r,h=!1){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,s),i&&this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,i),t.projection=this.projection,t.view=this.view,t.model=e,t.use();const a=h?this.gl.POINTS:this.gl.TRIANGLES;i?this.gl.drawElements(a,r,this.gl.UNSIGNED_SHORT,0):this.gl.drawArrays(a,0,r)}}class h{constructor(t,e,s=!1){this.timeout=t,this.callback=e,this.repeating=s,this.progress=0,this.enabled=!0}update(t){this.enabled&&(this.progress+=t,this.progress>=this.timeout&&(this.callback(),this.repeating?this.progress-=this.timeout:this.enabled=!1))}}class a{constructor(){this.active=!1,this.x=0,this.y=0,this.z=0,this.u=0,this.v=0}spawn(t,e,s,i,r,a,n){this.active=!0,this.x=t,this.y=e,this.z=s,this.u=i,this.v=r,a&&(a.sprite=this,this.controller=a),n&&(this.frames=n,this.currentFrame=0,this.frameDirection=-1,this.frameTimer=new h(100,()=>{this.currentFrame=(this.currentFrame+this.frameDirection)%this.frames.length,this.currentFrame<0&&(this.currentFrame=this.frames.length-1),this.u=this.frames[this.currentFrame][0],this.v=this.frames[this.currentFrame][1]},!0))}update(t){this.controller&&this.controller.update(t),this.frameTimer&&this.frameTimer.update(t);const e=this.oldX!==this.x||this.oldY!==this.y||this.oldZ!==this.z||this.oldU!==this.u||this.oldV!==this.v;return this.oldX=this.x,this.oldY=this.y,this.oldZ=this.z,this.oldU=this.u,this.oldV=this.v,e}}const n=128,o=20;class l{constructor(t){this.renderer=t,this.vertexBuffer=t.gl.createBuffer(),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,this.vertexBuffer),t.gl.bufferData(t.gl.ARRAY_BUFFER,n*o,t.gl.STATIC_DRAW),this.spriteVertex=new Float32Array(5),this.sprites=[];for(let t=0;t<n;t++)this.sprites.push(new a(t))}insertSprite(t,e){this.spriteVertex[0]=e.x,this.spriteVertex[1]=e.y,this.spriteVertex[2]=e.z,this.spriteVertex[3]=e.u,this.spriteVertex[4]=e.v,this.renderer.gl.bindBuffer(this.renderer.gl.ARRAY_BUFFER,this.vertexBuffer),this.renderer.gl.bufferSubData(this.renderer.gl.ARRAY_BUFFER,t*o,this.spriteVertex)}spawnSprite(t,e,s,i,r,h=null,a=null){for(let o=0;o<n;o++){const n=this.sprites[o];if(!n.active)return n.spawn(t,e,s,i,r,h,a),this.insertSprite(o,n),n}}update(t){for(let e=0;e<n;e++){const s=this.sprites[e];s.active&&s.update(t)&&this.insertSprite(e,s)}}draw(){this.renderer.draw(this.renderer.spriteShader,null,this.vertexBuffer,null,n,!0)}}var c="\n           11\n\n  D GD   D\n 11111  11111111111111\n 222221122222222222222\n 222222222222222222222\n 222222222222222222222\n";class d{constructor(t,e){this.renderer=t,this.map=e,this.dx=0,this.dy=0,this.leftPressed=!1,this.rightPressed=!1,this.upPressed=!1,this.downPressed=!1,addEventListener("keydown",t=>{switch(t.keyCode){case 37:this.leftPressed=!0,t.preventDefault();break;case 39:this.rightPressed=!0,t.preventDefault();break;case 38:this.upPressed=!0,t.preventDefault();break;case 40:this.downPressed=!0,t.preventDefault()}}),addEventListener("keyup",t=>{switch(t.keyCode){case 37:this.leftPressed=!1,t.preventDefault();break;case 39:this.rightPressed=!1,t.preventDefault();break;case 38:this.upPressed=!1,t.preventDefault();break;case 40:this.downPressed=!1,t.preventDefault()}})}update(t){this.dx=0,this.dy=0,this.leftPressed&&(this.dx-=.1),this.rightPressed&&(this.dx+=.1),this.upPressed&&(this.dy-=.1),this.downPressed&&(this.dy+=.1),this.sprite.frameTimer.enabled=0!==this.dx,this.sprite.frameDirection=Math.sign(this.dx);const e=this.sprite.x+this.dx*t;!this.ignoreCollisions&&this.isBlocked(e,this.sprite.y)?this.dx<0?this.sprite.x=e+this.map.prevTileOffset(e):this.sprite.x=e-this.map.nextTileOffset(e):this.sprite.x=e;const s=this.sprite.y+this.dy*t;!this.ignoreCollisions&&this.isBlocked(this.sprite.x,s)?this.dy<0?this.sprite.y=s+this.map.prevTileOffset(s):this.sprite.y=s-this.map.nextTileOffset(s):this.sprite.y=s,this.renderer.cameraX=this.sprite.x+32-400,this.renderer.cameraY=this.sprite.y+32-300}isBlocked(t,e){return this.map.isBlocked(t,e)||this.map.isBlocked(t,e+64-1)||this.map.isBlocked(t+64-1,e)||this.map.isBlocked(t+64-1,e+64-1)}}class p{constructor(t,e){this.tiles=[];const s=c.split("\n");for(let i=0;i<s.length;i++){this.tiles.push([]);for(let r=0;r<s[i].length;r++){const h=s[i][r];if(" "===h){this.tiles[i].push(!1);continue}let a=null,n=0;switch(h){case"1":a=0;break;case"2":a=1;break;case"D":e.spawnSprite(64*r,64*i,.9,0,1);break;case"G":e.spawnSprite(64*r,64*i,.7,3,0,new d(t,this),[[3,0],[4,0],[5,0],[6,0]]),this.gib=new d(t,e,this,64*r,64*i)}null!==a?(e.spawnSprite(64*r,64*i,.1,a,n),this.tiles[i].push(!0)):this.tiles[i].push(!1)}}}isBlocked(t,e){const s=this.tiles[Math.floor(e/64)];return!!s&&!0===s[Math.floor(t/64)]}prevTileOffset(t){return 64*(Math.floor(t/64)+1)-t}nextTileOffset(t){return t-64*Math.floor(t/64)}}const g=new class{constructor(){this.renderer=new r,this.spriteSheet=new l(this.renderer),this.map=new p(this.renderer,this.spriteSheet),this.lastTimestamp=performance.now()}update(t){const e=t-this.lastTimestamp;this.spriteSheet.update(e),this.renderer.update(),this.lastTimestamp=t}render(){this.renderer.clear(),this.spriteSheet.draw()}},u=t=>{requestAnimationFrame(u),g.update(t),g.render()};requestAnimationFrame(u)}();
