{"version":3,"file":"index.js","sources":["../src/Shader.js","../src/Timer.js","../src/Renderer.js","../shaders/sprite.vert","../shaders/sprite.frag","../shaders/particle.vert","../shaders/particle.frag","../shaders/text.vert","../shaders/text.frag","../src/InputDevice.js","../src/KeyboardInput.js","../src/GamepadInput.js","../src/Input.js","../src/Sprite.js","../src/SpriteSheet.js","../src/ParticleSystem.js","../src/TextSegment.js","../src/TextLayer.js","../src/Audio.js","../src/SpriteController.js","../src/Laser.js","../src/Gib.js","../src/Brick.js","../src/enemies/Rock.js","../src/enemies/WormSegment.js","../src/enemies/WormHead.js","../src/items/Item.js","../src/items/Teleportation.js","../src/enemies/Boss.js","../src/enemies/BossSegment.js","../src/Poison.js","../src/enemies/BossEye.js","../src/items/Propulsion.js","../src/items/Elevation.js","../src/items/Excavation.js","../src/items/Extermination.js","../src/items/Flotation.js","../src/items/Heart.js","../src/Map.js","../src/Title.js","../src/Start.js","../src/GameOver.js","../src/Victory.js","../src/index.js","../src/Game.js"],"sourcesContent":["const numComponents = (gl, type) => {\n  switch (type) {\n  case gl.FLOAT:\n    return 1;\n  case gl.FLOAT_VEC2:\n    return 2;\n  case gl.FLOAT_VEC3:\n    return 3;\n  case gl.FLOAT_VEC4:\n    return 4;\n  case gl.FLOAT_MAT3:\n    return 9;\n  case gl.FLOAT_MAT4:\n    return 16;\n  }\n}\n\nexport default class {\n  constructor(gl, vertexShaderSource, fragmentShaderSource) {\n    this.gl = gl;\n\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexShaderSource);\n    gl.compileShader(vertexShader);\n\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentShaderSource);\n    gl.compileShader(fragmentShader);\n\n    this.program = gl.createProgram();\n    gl.attachShader(this.program, vertexShader);\n    gl.attachShader(this.program, fragmentShader);\n    gl.linkProgram(this.program);\n\n    this.uniforms = [];\n\n    const numUniforms = gl.getProgramParameter(this.program,\n                                               gl.ACTIVE_UNIFORMS);\n\n    for (let i = 0; i < numUniforms; i++) {\n      const uniform = gl.getActiveUniform(this.program, i);\n      const location = gl.getUniformLocation(this.program, uniform.name);\n\n      this[uniform.name] = null;\n\n      this.uniforms.push(\n        { type: uniform.type, name: uniform.name, location: location }\n      );\n    }\n\n    this.attributes = [];\n    this.stride = 0;\n\n    const numAttribs = gl.getProgramParameter(this.program,\n                                              gl.ACTIVE_ATTRIBUTES);\n\n    for (let i = 0; i < numAttribs; i++) {\n      const attribute = gl.getActiveAttrib(this.program, i);\n      const location = gl.getAttribLocation(this.program, attribute.name);\n      const components = numComponents(gl, attribute.type);\n\n      this.attributes.push(\n        { name: attribute.name, location: location, components: components }\n      );\n\n      this.stride += components * FLOAT_SIZE;\n    }\n\n    this.attributes.sort((a, b) => a.name < b.name ? -1 : 1);\n  }\n\n  use() {\n    this.gl.useProgram(this.program);\n\n    let offset = 0;\n\n    for (const attribute of this.attributes) {\n      this.gl.enableVertexAttribArray(attribute.location);\n      this.gl.vertexAttribPointer(attribute.location, attribute.components,\n                                  this.gl.FLOAT, false, this.stride, offset);\n\n      offset += attribute.components * FLOAT_SIZE;\n    }\n\n    for (const uniform of this.uniforms) {\n      switch (uniform.type) {\n      case this.gl.FLOAT:\n        this.gl.uniform1f(uniform.location, this[uniform.name]);\n        break;\n      case this.gl.FLOAT_VEC2:\n        this.gl.uniform2fv(uniform.location, this[uniform.name]);\n        break;\n      case this.gl.FLOAT_MAT2:\n        this.gl.uniformMatrix2fv(uniform.location, false, this[uniform.name]);\n        break;\n      case this.gl.FLOAT_MAT4:\n        this.gl.uniformMatrix4fv(uniform.location, false, this[uniform.name]);\n        break;\n      }\n    }\n  }\n}\n","export default class {\n  constructor(timeout, callback = null, repeating = false) {\n    this.timeout = timeout;\n    this.callback = callback;\n    this.repeating = repeating;\n\n    this.progress = 0;\n    this.enabled = true;\n  }\n\n  update() {\n    if (!this.enabled) {\n      return;\n    }\n\n    this.progress += TIME_STEP;\n\n    if (this.progress >= this.timeout) {\n      if (this.repeating) {\n        this.progress -= this.timeout;\n      } else {\n        this.enabled = false;\n      }\n\n      if (this.callback) {\n        this.callback();\n      }\n    }\n  }\n\n  reset() {\n    this.enabled = true;\n    this.progress = 0;\n  }\n}\n","import spriteVertexShader from '../shaders/sprite.vert';\nimport spriteFragmentShader from '../shaders/sprite.frag';\n\nimport particleVertexShader from '../shaders/particle.vert';\nimport particleFragmentShader from '../shaders/particle.frag';\n\nimport textVertexShader from '../shaders/text.vert';\nimport textFragmentShader from '../shaders/text.frag';\n\nimport Shader from './Shader';\nimport Timer from './Timer';\n\nexport default class {\n  constructor(game) {\n    const canvas = document.createElement('canvas');\n    canvas.width = SCREEN_WIDTH;\n    canvas.height = SCREEN_HEIGHT;\n    document.body.appendChild(canvas);\n\n    this.gl = canvas.getContext('webgl', { antialias: false });\n\n    this.gl.enable(this.gl.DEPTH_TEST);\n\n    this.gl.enable(this.gl.BLEND);\n    this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n\n    this.gl.clearColor(0, 0.53, 1, 1);\n\n    this.spriteShader = new Shader(this.gl, spriteVertexShader,\n                                   spriteFragmentShader);\n\n    this.particleShader = new Shader(this.gl, particleVertexShader,\n                                     particleFragmentShader);\n\n    this.textShader = new Shader(this.gl, textVertexShader,\n                                 textFragmentShader);\n\n    this.projection = new Float32Array([\n      2.0 / SCREEN_WIDTH, 0.0, 0.0, 0.0,\n      0.0, -2.0 / SCREEN_HEIGHT, 0.0, 0.0,\n      0.0, 0.0, -1.0, 0.0,\n      -1.0, 1.0, 0.0, 1.0\n    ]);\n\n    this.view = new Float32Array([\n      1.0, 0.0, 0.0, 0.0,\n      0.0, 1.0, 0.0, 0.0,\n      0.0, 0.0, 1.0, 0.0,\n      0.0, 0.0, 0.0, 1.0\n    ]);\n\n    this.cameraX = 0.0;\n    this.cameraY = 0.0;\n\n    this.texture = this.gl.createTexture();\n\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, 1, 1, 0,\n                       this.gl.RGBA, this.gl.UNSIGNED_BYTE,\n                       new Uint8Array([0, 0, 255, 255]));\n\n    this.setUpTexture();\n\n    const image = new Image();\n\n    image.addEventListener('load', () => {\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.texture);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA,\n                         this.gl.UNSIGNED_BYTE, image);\n\n      this.setUpTexture();\n\n      game.loaded = true;\n    });\n\n    image.crossOrigin = '';\n    image.src = 'TILES_TEXTURE';\n\n    this.shakeTimer = new Timer(200);\n    this.shakeTimer.enabled = false;\n    this.shakeIntensity = 10;\n  }\n\n  setUpTexture() {\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S,\n                          this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T,\n                          this.gl.CLAMP_TO_EDGE);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER,\n                          this.gl.NEAREST);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER,\n                          this.gl.NEAREST);\n  }\n\n  createVertexBuffer(size) {\n    const vertexBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vertexBuffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, size, this.gl.STATIC_DRAW);\n\n    return vertexBuffer;\n  }\n\n  updateVertex(vertexBuffer, index, vertex) {\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vertexBuffer);\n\n    this.gl.bufferSubData(this.gl.ARRAY_BUFFER, index, vertex);\n  }\n\n  clear() {\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n  }\n\n  shake(intensity = 10) {\n    this.shakeIntensity = intensity;\n    this.shakeTimer.reset();\n  }\n\n  update() {\n    this.shakeTimer.update();\n\n    this.view[12] = -this.cameraX;\n    this.view[13] = -this.cameraY;\n\n    if (this.shakeTimer.enabled) {\n      this.view[12] += (Math.random() - 0.5) * this.shakeIntensity;\n      this.view[13] += (Math.random() - 0.5) * this.shakeIntensity;\n    }\n\n    this.view[12] = Math.round(this.view[12]);\n    this.view[13] = Math.round(this.view[13]);\n  }\n\n  draw(shader, vertexBuffer, count) {\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vertexBuffer);\n\n    shader.projection = this.projection;\n    shader.view = this.view;\n\n    shader.use();\n\n    this.gl.drawArrays(this.gl.POINTS, 0, count);\n  }\n}\n","uniform mat4 projection;\nuniform mat4 view;\n\nattribute vec3 vertex0Position;\nattribute vec2 vertex1TexCoord;\nattribute float vertex2Tint;\n\nvarying vec2 texCoord;\nvarying float tint;\n\nvoid main() {\n  gl_PointSize = SPRITE_SIZE;\n  gl_Position = projection * view * vec4(vertex0Position, 1.0);\n\n  texCoord = vertex1TexCoord;\n  tint = vertex2Tint;\n}\n","precision highp float;\n\nuniform sampler2D tex;\n\nvarying vec2 texCoord;\nvarying float tint;\n\nvoid main() {\n  if (gl_FragCoord.z == 0.5) {\n    discard;\n  }\n\n  vec2 texCoord = mix(\n    (vec2(TILE_SIZE) * texCoord) /\n      vec2(TILES_TEXTURE_WIDTH, TILES_TEXTURE_HEIGHT),\n    (vec2(TILE_SIZE) * (texCoord + vec2(1.0))) /\n      vec2(TILES_TEXTURE_WIDTH, TILES_TEXTURE_HEIGHT),\n    gl_PointCoord\n  );\n\n  vec4 texel = texture2D(tex, texCoord);\n\n  gl_FragColor = vec4(texel.rgb + vec3(tint), texel.a);\n\n  if (gl_FragColor.a < 0.1) {\n    discard;\n  }\n}\n","uniform mat4 projection;\nuniform mat4 view;\n\nuniform float time;\n\nattribute vec2 vertex0Position;\nattribute vec3 vertex1Color;\nattribute vec2 vertex2Velocity;\nattribute float vertex3Emitted;\nattribute float vertex4Lifetime;\n\nvarying vec4 color;\n\nvoid main() {\n  float age = time - vertex3Emitted;\n  vec2 position = vertex0Position + vertex2Velocity * age;\n\n  gl_PointSize = PARTICLE_SIZE;\n  gl_Position = projection * view * vec4(position, PARTICLE_Z, 1.0);\n\n  color = vec4(vertex1Color, 1.0 - smoothstep(0.0, vertex4Lifetime, age));\n}\n","precision highp float;\n\nvarying vec4 color;\n\nvoid main() {\n  gl_FragColor = color;\n}\n","uniform mat4 projection;\n\nattribute vec2 vertex0Position;\nattribute vec2 vertex1TexCoord;\nattribute float vertex2Size;\n\nvarying float size;\nvarying vec2 texCoord;\n\nvoid main() {\n  gl_PointSize = vertex2Size;\n  gl_Position = projection * vec4(vertex0Position, TEXT_Z, 1.0);\n\n  size = vertex2Size;\n  texCoord = vertex1TexCoord;\n}\n","precision highp float;\n\nuniform sampler2D tex;\n\nvarying float size;\nvarying vec2 texCoord;\n\nvoid main() {\n  if (size < 0.1) {\n    discard;\n  }\n\n  vec2 texCoord = mix(\n    texCoord,\n    texCoord + vec2(FONT_SIZE / TILES_TEXTURE_WIDTH,\n                    FONT_SIZE / TILES_TEXTURE_HEIGHT),\n    gl_PointCoord\n  );\n\n  gl_FragColor = texture2D(tex, texCoord);\n\n  if (gl_FragColor.a < 0.1) {\n    discard;\n  }\n}\n","export default class {\n  constructor(index = null) {\n    this.index = index;\n\n    this.pressedMask = 0;\n    this.lastPressedMask = 0;\n    this.justPressedMask = 0;\n    this.justReleasedMask = 0;\n\n    this.x = 0.0;\n    this.y = 0.0;\n  }\n\n  update() {\n    this.justPressedMask = this.pressedMask & ~this.lastPressedMask;\n    this.justReleasedMask = ~this.pressedMask & this.lastPressedMask;\n\n    this.lastPressedMask = this.pressedMask;\n  }\n\n  pressed(code) {\n    return (this.pressedMask & code) === code;\n  }\n\n  justPressed(code) {\n    return (this.justPressedMask & code) === code;\n  }\n\n  justReleased(code) {\n    return (this.justReleasedMask & code) === code;\n  }\n}\n","import InputDevice from \"./InputDevice\";\n\nconst KEY_UP = 'ArrowUp';\nconst KEY_DOWN = 'ArrowDown';\nconst KEY_LEFT = 'ArrowLeft';\nconst KEY_RIGHT = 'ArrowRight';\n\nconst KEY_W = 'KeyW';\nconst KEY_S = 'KeyS';\nconst KEY_A = 'KeyA';\nconst KEY_D = 'KeyD';\n\nconst KEY_X = 'KeyX';\nconst KEY_Z = 'KeyZ';\n\nconst KEY_K = 'KeyK';\nconst KEY_J = 'KeyJ';\n\nconst KEY_SPACE = 'Space';\n\nconst keyCodeMapping = {\n  38: KEY_UP,\n  40: KEY_DOWN,\n  37: KEY_LEFT,\n  39: KEY_RIGHT,\n\n  87: KEY_W,\n  65: KEY_A,\n  83: KEY_S,\n  68: KEY_D,\n\n  88: KEY_X,\n  90: KEY_Z,\n\n  75: KEY_K,\n  74: KEY_J,\n\n  32: KEY_SPACE\n};\n\nexport default class extends InputDevice {\n  constructor() {\n    super();\n\n    addEventListener(\"keydown\", event => {\n      const code = event.code || keyCodeMapping[event.keyCode];\n\n      switch (code) {\n      case KEY_UP: case KEY_W:\n        this.pressedMask |= UP;\n        event.preventDefault();\n        break;\n      case KEY_DOWN: case KEY_S:\n        this.pressedMask |= DOWN;\n        event.preventDefault();\n        break;\n      case KEY_LEFT: case KEY_A:\n        this.pressedMask |= LEFT;\n        event.preventDefault();\n        break;\n      case KEY_RIGHT: case KEY_D:\n        this.pressedMask |= RIGHT;\n        event.preventDefault();\n        break;\n      case KEY_X: case KEY_K: case KEY_SPACE:\n        this.pressedMask |= ACTION_A;\n        event.preventDefault();\n        break;\n      case KEY_Z: case KEY_J:\n        this.pressedMask |= ACTION_B;\n        event.preventDefault();\n        break;\n      }\n    });\n\n    addEventListener(\"keyup\", event => {\n      const code = event.code || keyCodeMapping[event.keyCode];\n\n      switch (code) {\n      case KEY_UP: case KEY_W:\n        this.pressedMask &= ~UP;\n        event.preventDefault();\n        break;\n      case KEY_DOWN: case KEY_S:\n        this.pressedMask &= ~DOWN;\n        event.preventDefault();\n        break;\n      case KEY_LEFT: case KEY_A:\n        this.pressedMask &= ~LEFT;\n        event.preventDefault();\n        break;\n      case KEY_RIGHT: case KEY_D:\n        this.pressedMask &= ~RIGHT;\n        event.preventDefault();\n        break;\n      case KEY_X: case KEY_K: case KEY_SPACE:\n        this.pressedMask &= ~ACTION_A;\n        event.preventDefault();\n        break;\n      case KEY_Z: case KEY_J:\n        this.pressedMask &= ~ACTION_B;\n        event.preventDefault();\n        break;\n      }\n    });\n  }\n\n  update() {\n    super.update();\n\n    this.x = 0.0;\n    this.y = 0.0;\n\n    if (this.pressed(UP)) {\n      this.y--;\n    }\n\n    if (this.pressed(DOWN)) {\n      this.y++;\n    }\n\n    if (this.pressed(LEFT)) {\n      this.x--;\n    }\n\n    if (this.pressed(RIGHT)) {\n      this.x++;\n    }\n  }\n}\n","import InputDevice from \"./InputDevice\";\n\nexport default class extends InputDevice {\n  process(gamepad) {\n    if (gamepad.buttons.filter((_, index) => index % 2 === 0)\n                       .some(button => button.pressed)) {\n      this.pressedMask |= ACTION_A;\n    } else if (gamepad.buttons.filter((_, index) => index % 2 === 0)\n                              .every(button => !button.pressed)) {\n      this.pressedMask &= ~ACTION_A;\n    }\n\n    if (gamepad.buttons.filter((_, index) => index % 2 === 1)\n                       .some(button => button.pressed)) {\n      this.pressedMask |= ACTION_B;\n    } else if (gamepad.buttons.filter((_, index) => index % 2 === 1)\n                              .every(button => !button.pressed)) {\n      this.pressedMask &= ~ACTION_B;\n    }\n\n    this.x = 0.0;\n    this.y = 0.0;\n\n    for (let i = 0; i < gamepad.axes.length; i++) {\n      if (gamepad.axes[i] !== 0.0) {\n        if (i % 2 === 0) {\n          this.x = gamepad.axes[i];\n        } else {\n          this.y = gamepad.axes[i];\n        }\n      }\n    }\n  }\n}\n","import KeyboardInput from \"./KeyboardInput\";\nimport GamepadInput from \"./GamepadInput\";\n\nexport default class {\n  constructor() {\n    this.devices = [new KeyboardInput()];\n\n    this.x = 0.0;\n    this.y = 0.0;\n  }\n\n  update() {\n    for (const gamepad of navigator.getGamepads()) {\n      if (!gamepad) {\n        continue;\n      }\n\n      let gamepadInput =\n        this.devices.find(device => device.index === gamepad.index);\n\n      if (!gamepadInput) {\n        gamepadInput = new GamepadInput(gamepad.index);\n        this.devices.push(gamepadInput);\n      }\n\n      gamepadInput.process(gamepad);\n    }\n\n    for (const device of this.devices) {\n      device.update();\n    }\n\n    const deviceX = this.devices.find(device => device.x !== 0.0);\n    this.x = deviceX ? deviceX.x : 0.0;\n\n    const deviceY = this.devices.find(device => device.y !== 0.0);\n    this.y = deviceY ? deviceY.y : 0.0;\n  }\n\n  pressed(code) {\n    return this.devices.some(device => device.pressed(code));\n  }\n\n  justPressed(code) {\n    return this.devices.some(device => device.justPressed(code));\n  }\n\n  justReleased(code) {\n    return this.devices.some(device => device.justReleased(code));\n  }\n}\n","import Timer from \"./Timer\";\n\nexport default class {\n  constructor() {\n    this.active = false;\n    this.inactivate = false;\n\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = 0.0;\n\n    this.u = 0.0;\n    this.v = 0.0;\n\n    this.tint = 0.0;\n\n    this.oldX = 0.0;\n    this.oldY = 0.0;\n    this.oldZ = 0.0;\n\n    this.oldU = 0.0;\n    this.oldV = 0.0;\n\n    this.oldTint = 0.0;\n\n    this.canFlash = true;\n\n    this.flashTimer = new Timer(100, () => {\n      if (this.tint !== 0.0) {\n        this.tint = 0.0;\n        this.flashTimer.reset();\n      } else {\n        this.canFlash = true;\n      }\n    });\n\n    this.flashTimer.enabled = false;\n  }\n\n  spawn(x, y, z, u, v, controller, frames) {\n    this.active = true;\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    this.u = u;\n    this.v = v;\n\n    this.tint = 0.0;\n\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.oldZ = this.z;\n\n    this.oldU = this.u;\n    this.oldV = this.v;\n\n    this.oldTint = this.tint;\n\n    this.canFlash = true;\n\n    if (controller) {\n      controller.init(this);\n\n      this.controller = controller;\n    }\n\n    if (frames) {\n      this.frames = frames;\n      this.currentFrame = 0;\n      this.frameDirection = -1;\n\n      this.frameTimer = new Timer(100, () => {\n        this.currentFrame =\n          (this.currentFrame + this.frameDirection) % this.frames.length;\n\n        if (this.currentFrame < 0) {\n          this.currentFrame = this.frames.length - 1;\n        }\n\n        this.u = this.frames[this.currentFrame][0];\n        this.v = this.frames[this.currentFrame][1];\n      }, true);\n    }\n  }\n\n  update() {\n    if (this.controller) {\n      this.controller.update();\n    }\n\n    if (this.frameTimer) {\n      this.frameTimer.update();\n    }\n\n    this.flashTimer.update();\n\n    if (this.inactivate) {\n      this.active = false;\n      this.inactivate = false;\n    }\n\n    if (!this.active) {\n      this.x = 0.0;\n      this.y = 0.0;\n      this.z = 0.0;\n\n      this.u = 0.0;\n      this.v = 0.0;\n\n      this.tint = 0.0;\n\n      this.controller = null;\n    }\n\n    const changed = this.oldX !== this.x || this.oldY !== this.y ||\n                    this.oldZ !== this.z || this.oldU !== this.u ||\n                    this.oldV !== this.v || this.oldTint !== this.tint;\n\n    this.oldX = this.x;\n    this.oldY = this.y;\n    this.oldZ = this.z;\n\n    this.oldU = this.u;\n    this.oldV = this.v;\n\n    this.oldTint = this.tint;\n\n    return changed;\n  }\n\n  flash() {\n    if (!this.canFlash) {\n      return;\n    }\n\n    this.canFlash = false;\n    this.tint = 1.0;\n    this.flashTimer.reset();\n  }\n\n  disable() {\n    this.inactivate = true;\n  }\n}\n","import Sprite from \"./Sprite\";\n\nconst MAX_SPRITES = 8192;\nconst VERTEX_SIZE = 24;\n\nexport default class {\n  constructor(renderer) {\n    this.renderer = renderer;\n\n    this.vertexBuffer = renderer.createVertexBuffer(MAX_SPRITES * VERTEX_SIZE);\n\n    this.spriteVertex = new Float32Array(VERTEX_SIZE / FLOAT_SIZE);\n\n    this.sprites = [];\n\n    for (let i = 0; i < MAX_SPRITES; i++) {\n      this.sprites.push(new Sprite(i));\n    }\n  }\n\n  updateSprite(i, sprite) {\n    this.spriteVertex[0] = sprite.active ? sprite.x + SPRITE_SIZE / 2.0 : 0.0;\n    this.spriteVertex[1] = sprite.active ? sprite.y + SPRITE_SIZE / 2.0 : 0.0;\n    this.spriteVertex[2] = sprite.active ? sprite.z : 0.0;\n    this.spriteVertex[3] = sprite.active ? sprite.u : 0.0;\n    this.spriteVertex[4] = sprite.active ? sprite.v : 0.0;\n    this.spriteVertex[5] = sprite.active ? sprite.tint : 0.0;\n\n    this.renderer.updateVertex(this.vertexBuffer, i * VERTEX_SIZE,\n                               this.spriteVertex);\n  }\n\n  spawnSprite(x, y, z, u, v, controller = null, frames = null) {\n    for (let i = 0; i < MAX_SPRITES; i++) {\n      const sprite = this.sprites[i];\n\n      if (!sprite.active) {\n        sprite.spawn(x, y, z, u, v, controller, frames);\n        this.updateSprite(i, sprite);\n\n        return sprite;\n      }\n    }\n  }\n\n  update() {\n    for (let i = 0; i < MAX_SPRITES; i++) {\n      const sprite = this.sprites[i];\n\n      if (sprite.active) {\n        if (sprite.update()) {\n          this.updateSprite(i, sprite);\n        }\n      }\n    }\n  }\n\n  draw() {\n    this.renderer.draw(this.renderer.spriteShader, this.vertexBuffer,\n                       MAX_SPRITES);\n  }\n\n  reset() {\n    for (const sprite of this.sprites) {\n      sprite.disable();\n      sprite.update();\n    }\n  }\n}\n","const MAX_PARTICLES = 2048;\nconst VERTEX_SIZE = 36;\n\nexport default class {\n  constructor(renderer) {\n    this.renderer = renderer;\n\n    this.vertexBuffer = renderer.createVertexBuffer(MAX_PARTICLES *\n                                                    VERTEX_SIZE);\n\n    this.particleVertex = new Float32Array(VERTEX_SIZE / FLOAT_SIZE);\n    this.nextIndex = 0;\n\n    this.time = 0;\n  }\n\n  emitParticle(x, y, r, g, b, dx, dy, lifetime) {\n    this.particleVertex[0] = x;\n    this.particleVertex[1] = y;\n    this.particleVertex[2] = r;\n    this.particleVertex[3] = g;\n    this.particleVertex[4] = b;\n    this.particleVertex[5] = dx;\n    this.particleVertex[6] = dy;\n    this.particleVertex[7] = this.time;\n    this.particleVertex[8] = lifetime;\n\n    this.renderer.updateVertex(this.vertexBuffer, this.nextIndex * VERTEX_SIZE,\n                               this.particleVertex);\n\n    this.nextIndex = (this.nextIndex + 1) % MAX_PARTICLES;\n  }\n\n  update() {\n    this.time += TIME_STEP;\n  }\n\n  draw() {\n    this.renderer.particleShader.time = this.time;\n\n    this.renderer.draw(this.renderer.particleShader, this.vertexBuffer,\n                       MAX_PARTICLES);\n  }\n}\n","import Timer from \"./Timer\";\n\nexport default class {\n  constructor(textLayer, chars, size, style, timeOffset, timeout) {\n    this.textLayer = textLayer;\n    this.size = size;\n    this.chars = chars;\n\n    this.visible = true;\n    this.lastVisible = true;\n\n    if (style === TEXT_ANIMATED) {\n      for (const char of this.chars) {\n        char.size = 0;\n      }\n\n      this.nextChar = 0;\n\n      this.timer = new Timer(70, () => {\n        if (this.nextChar >= this.chars.length) {\n          this.timer.enabled = false;\n        } else {\n          this.chars[this.nextChar].size = this.size;\n\n          for (const char of this.chars) {\n            this.textLayer.updateChar(char);\n          }\n\n          this.nextChar++;\n        }\n      }, true);\n    } else if (style === TEXT_FLASHING) {\n      for (const char of this.chars) {\n        char.size = 0;\n      }\n\n      this.timer = new Timer(500, () => {\n        this.visible = !this.visible;\n      }, true);\n    }\n\n    if (this.timer && timeOffset) {\n      this.timer.enabled = false;\n\n      this.startTimer = new Timer(timeOffset, () => {\n        this.timer.enabled = true;\n\n        if (this.endTimer) {\n          this.endTimer.enabled = true;\n        }\n      });\n    }\n\n    for (const char of this.chars) {\n      this.textLayer.updateChar(char);\n    }\n\n    if (timeout) {\n      this.endTimer = new Timer(timeout, () => {\n        this.hide();\n      });\n\n      if (this.startTimer) {\n        this.endTimer.enabled = false;\n      }\n    }\n  }\n\n  update() {\n    if (this.startTimer) {\n      this.startTimer.update();\n    }\n\n    if (this.timer) {\n      this.timer.update();\n    }\n\n    if (this.endTimer) {\n      this.endTimer.update();\n    }\n\n    if (this.visible && !this.lastVisible) {\n      for (const char of this.chars) {\n        char.size = this.size;\n\n        this.textLayer.updateChar(char);\n      }\n    } else if (!this.visible && this.lastVisible) {\n      for (const char of this.chars) {\n        char.size = 0;\n\n        this.textLayer.updateChar(char);\n      }\n    }\n\n    this.lastVisible = this.visible;\n  }\n\n  hide() {\n    this.visible = false;\n\n    for (const char of this.chars) {\n      char.size = 0;\n\n      this.textLayer.updateChar(char);\n    }\n\n    if (this.startTimer) {\n      this.startTimer.enabled = false;\n    }\n\n    if (this.timer) {\n      this.timer.enabled = false;\n    }\n\n    if (this.endTimer) {\n      this.endTimer.enabled = false;\n    }\n  }\n}\n","import TextSegment from \"./TextSegment\";\n\nconst MAX_CHARS = 512;\nconst VERTEX_SIZE = 20;\n\nexport default class {\n  constructor(renderer) {\n    this.renderer = renderer;\n\n    this.vertexBuffer = renderer.createVertexBuffer(MAX_CHARS * VERTEX_SIZE);\n\n    this.charVertex = new Float32Array(VERTEX_SIZE / FLOAT_SIZE);\n    this.nextIndex = 0;\n\n    this.title = null;\n    this.help = null;\n\n    this.lives = null;\n  }\n\n  set titleText(text) {\n    if (this.title) {\n      this.title.hide();\n    }\n\n    this.title = text;\n  }\n\n  set helpText(text) {\n    if (this.help) {\n      this.help.hide();\n    }\n\n    this.help = text;\n  }\n\n  set livesText(text) {\n    if (this.lives) {\n      this.lives.hide();\n    }\n\n    this.lives = text;\n  }\n\n  updateChar(char) {\n    this.charVertex[0] = char.x + char.size / 2.0;\n    this.charVertex[1] = char.y + char.size / 2.0;\n    this.charVertex[2] = char.u;\n    this.charVertex[3] = char.v;\n    this.charVertex[4] = char.size;\n\n    this.renderer.updateVertex(this.vertexBuffer, char.index * VERTEX_SIZE,\n                               this.charVertex);\n  }\n\n  getUV(char) {\n    const charCode = char.charCodeAt(0);\n\n    let u = null;\n    let v = null;\n\n    if (charCode >= 'A'.charCodeAt(0) && charCode <= 'P'.charCodeAt(0)) {\n      u = (char.charCodeAt(0) - 'A'.charCodeAt(0)) *\n          FONT_SIZE / TILES_TEXTURE_WIDTH;\n      v = FONT_TEXTURE_OFFSET / TILES_TEXTURE_HEIGHT;\n    } else if (charCode >= 'Q'.charCodeAt(0) && charCode <= 'Z'.charCodeAt(0)) {\n      u = (char.charCodeAt(0) - 'Q'.charCodeAt(0)) *\n          FONT_SIZE / TILES_TEXTURE_WIDTH;\n      v = (FONT_TEXTURE_OFFSET + FONT_SIZE) / TILES_TEXTURE_HEIGHT;\n    } else if (char === '<') {\n      u = 10 * FONT_SIZE / TILES_TEXTURE_WIDTH;\n      v = (FONT_TEXTURE_OFFSET + FONT_SIZE) / TILES_TEXTURE_HEIGHT;\n    } else if (char === '/') {\n      u = 11 * FONT_SIZE / TILES_TEXTURE_WIDTH;\n      v = (FONT_TEXTURE_OFFSET + FONT_SIZE) / TILES_TEXTURE_HEIGHT;\n    }\n\n    return [u, v];\n  }\n\n  createSegment(x, y, string, size, style, timeOffset, timeout) {\n    let chars = [];\n\n    let cx = x;\n\n    for (const char of string) {\n      if (char === '\\n') {\n        y += size + 12.0;\n        cx = x;\n      } else {\n        const [u, v] = this.getUV(char);\n\n        if (u !== null && v !== null) {\n          const index = this.nextIndex;\n          this.nextIndex = (this.nextIndex + 1) % MAX_CHARS;\n\n          chars.push({ index: index, x: cx, y: y, u: u, v: v, size: size });\n        }\n\n        cx += size;\n      }\n    }\n\n    return new TextSegment(this, chars, size, style, timeOffset, timeout);\n  }\n\n  createCenteredSegment(y, string, size, style, timeOffset, timeout) {\n    let maxWidth = 0;\n\n    for (const line of string.split('\\n')) {\n      const width = line.length * size;\n\n      if (width > maxWidth) {\n        maxWidth = width;\n      }\n    }\n\n    const x = SCREEN_WIDTH / 2 - maxWidth / 2;\n\n    return this.createSegment(x, y, string, size, style, timeOffset, timeout);\n  }\n\n  update() {\n    if (this.title) {\n      this.title.update();\n    }\n\n    if (this.help) {\n      this.help.update();\n    }\n\n    if (this.lives) {\n      this.lives.update();\n    }\n  }\n\n  draw() {\n    this.renderer.draw(this.renderer.textShader, this.vertexBuffer, MAX_CHARS);\n  }\n}\n","export default class {\n  constructor() {\n    this.context = new AudioContext();\n  }\n\n  speak(text) {\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.rate = 1.2;\n    utterance.pitch = 0.3;\n\n    speechSynthesis.speak(utterance);\n  }\n\n  play(type, startFrequency, finalFrequency, duration) {\n    const oscillator = this.context.createOscillator();\n    const gain = this.context.createGain();\n\n    oscillator.type = type;\n    oscillator.frequency.setValueAtTime(\n      startFrequency, this.context.currentTime\n    );\n    oscillator.frequency.exponentialRampToValueAtTime(\n      finalFrequency, this.context.currentTime + duration\n    );\n\n    gain.gain.setValueAtTime(0.2, this.context.currentTime);\n    gain.gain.exponentialRampToValueAtTime(\n      0.01, this.context.currentTime + duration\n    );\n\n    oscillator.connect(gain);\n    gain.connect(this.context.destination);\n\n    oscillator.start();\n    oscillator.stop(this.context.currentTime + duration);\n  }\n}\n","export default class {\n  constructor(map) {\n    this.map = map;\n\n    this.dx = 0.0;\n    this.dy = 0.0;\n\n    this.ax = 0.0;\n    this.ay = 0.0;\n\n    this.hitboxX = 0.0;\n    this.hitboxY = 0.0;\n    this.hitboxW = SPRITE_SIZE;\n    this.hitboxH = SPRITE_SIZE;\n\n    this.maxDx = 0.5;\n\n    this.ignoreCollisions = false;\n  }\n\n  init(sprite) {\n    this.sprite = sprite;\n  }\n\n  get x() {\n    return this.sprite.x;\n  }\n\n  get y() {\n    return this.sprite.y;\n  }\n\n  set x(x) {\n    this.sprite.x = x;\n  }\n\n  set y(y) {\n    this.sprite.y = y;\n  }\n\n  get left() {\n    return this.x + this.hitboxX;\n  }\n\n  get right() {\n    return this.x + this.hitboxX + this.hitboxW - 1;\n  }\n\n  get top() {\n    return this.y + this.hitboxY;\n  }\n\n  get bottom() {\n    return this.y + this.hitboxY + this.hitboxH - 1;\n  }\n\n  update() {\n    this.dx += this.ax * TIME_STEP;\n    this.dy += this.ay * TIME_STEP;\n\n    if (this.dx > this.maxDx) {\n      this.dx = this.maxDx;\n    } else if (this.dx < -this.maxDx) {\n      this.dx = -this.maxDx;\n    }\n\n    if (this.dy > 2.0) {\n      this.dy = 2.0;\n    } else if (this.dy < -2.0) {\n      this.dy = -2.0;\n    }\n\n    this.x += this.dx * TIME_STEP;\n\n    if (!this.ignoreCollisions && this.tileAt()) {\n      if (this.dx < 0) {\n        this.x += this.map.prevTileOffset(this.left);\n      } else {\n        this.x -= this.map.nextTileOffset(this.right) + 1;\n      }\n    }\n\n    this.y += this.dy * TIME_STEP;\n\n    if (!this.ignoreCollisions && this.tileAt()) {\n      if (this.dy < 0) {\n        this.y += this.map.prevTileOffset(this.top);\n      } else {\n        this.y -= this.map.nextTileOffset(this.bottom) + 1;\n      }\n    }\n  }\n\n  tileAt(xOffset = 0, yOffset = 0) {\n    return this.map.tileAt(this.left + xOffset, this.top + yOffset) ||\n           this.map.tileAt(this.left + xOffset, this.bottom + yOffset) ||\n           this.map.tileAt(this.right + xOffset, this.top + yOffset) ||\n           this.map.tileAt(this.right + xOffset, this.bottom + yOffset);\n  }\n\n  laserHit() {\n    return false;\n  }\n}\n","import SpriteController from \"./SpriteController\";\n\nexport default class extends SpriteController {\n  constructor(map, direction, spriteSheet, particleSystem) {\n    super(map);\n\n    this.spriteSheet = spriteSheet;\n    this.particleSystem = particleSystem;\n\n    this.hitboxX = 12.0;\n    this.hitboxY = 16.0;\n    this.hitboxW = 40.0;\n    this.hitboxH = 12.0;\n\n    this.dx = direction === RIGHT ? 0.75 : -0.75;\n\n    this.maxDx = 1.0;\n\n    this.ignoreCollisions = true;\n  }\n\n  update() {\n    super.update();\n\n    if (this.tileAt()) {\n      this.sprite.disable();\n      this.explode();\n      return;\n    }\n\n    for (const sprite of this.spriteSheet.sprites) {\n      if (sprite.controller) {\n        if (!(sprite.controller.left > this.right ||\n              sprite.controller.right < this.left ||\n              sprite.controller.top > this.bottom ||\n              sprite.controller.bottom < this.top)) {\n          if (sprite.controller.laserHit()) {\n            this.sprite.disable();\n            this.explode();\n            return;\n          }\n        }\n      }\n    }\n\n    const x = this.dx > 0 ? this.left : this.right;\n\n    const type = Math.random() > 0.5;\n\n    const r = type ? 0.0 : 0.66;\n    const g = type ? 0.0 : 1.0;\n    const b = type ? 0.66 : 0.93;\n\n    if (Math.random() > 0.6) {\n      this.particleSystem.emitParticle(\n        x, this.top + this.hitboxH / 2.0 + (Math.random() - 0.5) * this.hitboxH,\n        r, g, b,\n        0.0, 0.0,\n        500.0\n      );\n    }\n  }\n\n  explode() {\n    for (let i = 0; i < 20; i++) {\n      const type = Math.random() > 0.5;\n\n      const r = type ? 0.0 : 0.66;\n      const g = type ? 0.0 : 1.0;\n      const b = type ? 0.66 : 0.93;\n\n      this.particleSystem.emitParticle(\n        this.left + Math.random() * this.hitboxW,\n        this.top + Math.random() * this.hitboxH,\n        r, g, b,\n        (Math.random() - 0.5) * 0.25, (Math.random() - 0.5) * 0.25,\n        200.0\n      );\n    }\n  }\n}\n","import SpriteController from \"./SpriteController\";\nimport Timer from \"./Timer\";\nimport Laser from \"./Laser\";\n\nexport default class extends SpriteController {\n  constructor(game, renderer, map, spriteSheet, input, particleSystem,\n              textLayer, audio) {\n    super(map);\n\n    this.game = game;\n    this.renderer = renderer;\n    this.spriteSheet = spriteSheet;\n    this.input = input;\n    this.particleSystem = particleSystem;\n    this.textLayer = textLayer;\n    this.audio = audio;\n\n    this.abilities = {\n      propulsion: false,\n      elevation: false,\n      excavation: false,\n      extermination: false,\n      flotation: false\n    };\n\n    this.loaded = false;\n\n    this.direction = 0.0;\n    this.lastDirection = 0.0;\n\n    this.facing = RIGHT;\n\n    this.lives = 3;\n    this.invincible = false;\n\n    this.invincibilityTimer = new Timer(1000, () => {\n      this.invincible = false;\n    });\n\n    this.invincibilityTimer.enabled = false;\n\n    this.jumps = 0;\n\n    this.movementTimer = new Timer(150, () => {\n      this.audio.play('sawtooth', 250, 300, 0.05);\n    }, true);\n\n    this.drillingTimer = new Timer(50, () => {\n      this.audio.play('sawtooth', 150, 200, 0.05);\n    }, true);\n  }\n\n  init(sprite) {\n    super.init(sprite);\n\n    this.renderer.cameraX = this.x + SPRITE_SIZE / 2.0 - SCREEN_WIDTH / 2.0;\n    this.renderer.cameraY = this.y + SPRITE_SIZE / 2.0 - SCREEN_HEIGHT / 2.0;\n\n    this.lastPlatform = this.y;\n  }\n\n  update() {\n    if (!this.loaded) {\n      this.updateLives();\n\n      this.loaded = true;\n    }\n\n    const tileLeft = this.tileAt(-1.0, 0.0);\n    const tileRight = this.tileAt(1.0, 0.0);\n    const tileAbove = this.tileAt(0.0, -1.0);\n    const tileBelow = this.tileAt(0.0, 1.0);\n\n    let drilling = false;\n\n    if (tileBelow) {\n      this.ay = 0.0;\n      this.dy = 0.0;\n\n      if (this.y - this.lastPlatform > 250.0) {\n        this.renderer.shake();\n\n        this.audio.play('sawtooth', 50, 150, 0.5);\n      }\n\n      this.lastPlatform = this.y;\n      this.jumps = 0;\n    } else if (tileAbove || (this.dy < 0 && !this.input.pressed(ACTION_A))) {\n      this.ay = 0.002;\n      this.dy = 0.0;\n    } else {\n      this.ay = 0.002;\n    }\n\n    if (this.input.x < 0.0 && this.abilities.propulsion) {\n      if (this.ax > 0.0) {\n        this.ax = 0.0;\n      }\n\n      if (!tileLeft) {\n        this.ax += 0.001 * this.input.x;\n      } else {\n        this.dx = 0.0;\n        this.ax = 0.0;\n\n        if (this.abilities.excavation && this.input.pressed(ACTION_B) &&\n            tileLeft.drill) {\n          this.renderer.shake(5);\n          this.drill(LEFT);\n          tileLeft.drill();\n          drilling = true;\n        }\n      }\n\n      this.direction = -1.0;\n      this.lastDirection = 0.0;\n\n      this.facing = LEFT;\n    } else if (this.input.x > 0.0 && this.abilities.propulsion) {\n      if (this.ax < 0.0) {\n        this.ax = 0.0;\n      }\n\n      if (!tileRight) {\n        this.ax += 0.001 * this.input.x;;\n      } else {\n        this.dx = 0.0;\n        this.ax = 0.0;\n\n        if (this.abilities.excavation && this.input.pressed(ACTION_B) &&\n            tileRight.drill) {\n          this.renderer.shake(5);\n          this.drill(RIGHT);\n          tileRight.drill();\n          drilling = true;\n        }\n      }\n\n      this.direction = 1.0;\n      this.lastDirection = 0.0;\n\n      this.facing = RIGHT;\n    } else {\n      if (this.direction !== 0.0) {\n        this.ax = -this.ax;\n\n        this.lastDirection = this.direction;\n        this.direction = 0.0;\n      }\n\n      if ((this.lastDirection > 0.0 && this.dx < 0.001) ||\n          (this.lastDirection < 0.0 && this.dx > 0.001) ||\n          tileLeft || tileRight) {\n        this.dx = 0.0;\n        this.ax = 0.0;\n      }\n\n      if (this.abilities.excavation && this.input.y < 0.0 &&\n          this.input.pressed(ACTION_B) && tileAbove && tileAbove.drill) {\n        this.renderer.shake(5);\n        this.drill(UP);\n        tileAbove.drill();\n        drilling = true;\n      } else if (this.abilities.excavation && this.input.y > 0.0 &&\n                 this.input.pressed(ACTION_B) && tileBelow && tileBelow.drill) {\n        this.renderer.shake(5);\n        this.drill(DOWN);\n        tileBelow.drill();\n        drilling = true;\n      }\n    }\n\n    this.drillingTimer.enabled = drilling;\n    this.drillingTimer.update();\n\n    if (this.abilities.extermination && this.input.justPressed(ACTION_B) &&\n        !drilling) {\n      const xOffset = this.facing === RIGHT ? 0 : -40;\n\n      this.spriteSheet.spawnSprite(\n        this.x + this.hitboxW / 2 + xOffset, this.y, PROJECTILE_Z, 0.0, 2.0,\n        new Laser(this.map, this.facing, this.spriteSheet, this.particleSystem)\n      );\n\n      this.audio.play('square', 600, 800, 0.3);\n    }\n\n    if (this.ax > 0.002) {\n      this.ax = 0.002;\n    } else if (this.ax < -0.002) {\n      this.ax = -0.002;\n    }\n\n    if (this.input.justPressed(ACTION_A) && this.abilities.elevation &&\n        (this.ay === 0.0 ||\n        (this.abilities.flotation && this.jumps < 2))) {\n      this.dy = -0.9;\n      this.jumps++;\n      this.audio.play('sawtooth', 150, 500, 0.3);\n    }\n\n    this.movementTimer.enabled = this.direction !== 0.0 && !drilling;\n    this.movementTimer.update();\n\n    super.update();\n\n    if (this.dx < -0.1) {\n      this.kickUpDirt(this.x + SPRITE_SIZE - 2, tileBelow);\n    } else if (this.dx > 0.1) {\n      this.kickUpDirt(this.x + 1, tileBelow);\n    }\n\n    this.sprite.frameTimer.timeout = tileBelow ? 100 : 40;\n    this.sprite.frameTimer.enabled = this.direction !== 0.0;\n    this.sprite.frameDirection = Math.sign(this.direction);\n\n    this.renderer.cameraX = this.x + SPRITE_SIZE / 2.0 - SCREEN_WIDTH / 2.0;\n    this.renderer.cameraY = this.y + SPRITE_SIZE / 2.0 - SCREEN_HEIGHT / 2.0;\n\n    this.invincibilityTimer.update();\n  }\n\n  updateLives() {\n    let text = '';\n\n    for (let i = 0; i < Math.max(3, this.lives); i++) {\n      text += this.lives > i ? '<' : '/';\n    }\n\n    this.textLayer.livesText = this.textLayer.createSegment(10, 10, text, 32);\n  }\n\n  damage() {\n    if (this.invincible) {\n      return;\n    }\n\n    this.invincible = true;\n    this.invincibilityTimer.reset();\n\n    this.lives--;\n    this.updateLives();\n\n    this.sprite.flash();\n\n    this.audio.play('sawtooth', 100, 200, 0.3);\n\n    if (this.lives === 1) {\n      this.audio.speak('WARNING! DAMAGE CRITICAL!');\n    }\n\n    this.renderer.shake();\n\n    if (this.lives === 0) {\n      this.sprite.disable();\n\n      for (let i = 0; i < 100; i++) {\n        this.particleSystem.emitParticle(\n          this.left + Math.random() * this.hitboxW,\n          this.top + Math.random() * this.hitboxH,\n          0.73, 0.73, 0.73,\n          (Math.random() - 0.5) * 0.25, (Math.random() - 0.5) * 0.25,\n          700.0\n        );\n      }\n\n      this.game.over();\n    }\n  }\n\n  drill(direction) {\n    const count = Math.random() * 30;\n\n    let x = 0;\n    let y = 0;\n\n    switch (direction) {\n    case UP:\n      x = this.x + SPRITE_SIZE / 2;\n      y = this.y;\n      break;\n    case DOWN:\n      x = this.x + SPRITE_SIZE / 2;\n      y = this.y + SPRITE_SIZE;\n      break;\n    case LEFT:\n      x = this.x;\n      y = this.y + SPRITE_SIZE / 2;\n      break;\n    case RIGHT:\n      x = this.x + SPRITE_SIZE;\n      y = this.y + SPRITE_SIZE / 2;\n      break;\n    }\n\n    for (let i = 0; i < count; i++) {\n      let dx = 0.0;\n      let dy = 0.0;\n\n      switch (direction) {\n      case UP:\n        dx = Math.random() * 0.5 - 0.25;\n        dy = Math.random() * 0.25;\n        break;\n      case DOWN:\n        dx = Math.random() * 0.5 - 0.25;\n        dy = -Math.random() * 0.25;\n        break;\n      case LEFT:\n        dx = Math.random() * 0.25;\n        dy = Math.random() * 0.5 - 0.25;\n        break;\n      case RIGHT:\n        dx = -Math.random() * 0.25;\n        dy = Math.random() * 0.5 - 0.25;\n        break;\n      }\n\n      const type = Math.random() < 0.75;\n\n      const r = type ? 1.0 : 0.93;\n      const g = type ? 0.46 : 0.93;\n      const b = 0.46;\n\n      this.particleSystem.emitParticle(x, y, r, g, b, dx, dy, 300.0);\n    }\n  }\n\n  kickUpDirt(x, tileType) {\n    if (!tileType) {\n      return;\n    }\n\n    const count = Math.random() * 2;\n\n    const r = tileType == '1' ? 0.0 : 0.4;\n    const g = tileType == '1' ? 0.8 : 0.27;\n    const b = tileType == '1' ? 0.33 : 0.0;\n\n    const direction = x < this.x + SPRITE_SIZE / 2 ? -1 : 1;\n\n    for (let i = 0; i < count; i++) {\n      this.particleSystem.emitParticle(\n        x, this.y + SPRITE_SIZE - 1,\n        r, g, b,\n        direction * Math.random() * 0.25, -Math.random() * 0.25,\n        200.0\n      );\n    }\n  }\n}\n","import SpriteController from \"./SpriteController\";\n\nexport default class extends SpriteController {\n  constructor(renderer, map, particleSystem) {\n    super(map);\n\n    this.renderer = renderer;\n    this.particleSystem = particleSystem;\n\n    this.ignoreCollisions = true;\n\n    this.integrity = 30;\n  }\n\n  drill() {\n    this.integrity--;\n\n    this.sprite.flash();\n\n    if (this.integrity <= 0) {\n      for (let i = 0; i < 100; i++) {\n        const type = Math.random() < 0.75;\n\n        const r = type ? 1.0 : 0.93;\n        const g = type ? 0.46 : 0.93;\n        const b = 0.46;\n\n        this.particleSystem.emitParticle(\n          this.left + Math.random() * this.hitboxW,\n          this.top + Math.random() * this.hitboxH,\n          r, g, b,\n          (Math.random() - 0.5) * 0.25, (Math.random() - 0.5) * 0.25,\n          700.0\n        );\n      }\n\n      this.renderer.shake(20);\n\n      this.sprite.disable();\n      this.map.setTileAt(this.x, this.y, null);\n    }\n  }\n}\n","import SpriteController from \"../SpriteController\";\nimport Timer from \"../Timer\";\n\nexport default class extends SpriteController {\n  constructor(renderer, map, gib, particleSystem, audio) {\n    super(map);\n\n    this.renderer = renderer;\n    this.gib = gib;\n    this.particleSystem = particleSystem;\n    this.audio = audio;\n\n    this.hitboxX = 8.0;\n    this.hitboxY = 4.0;\n    this.hitboxW = 56.0;\n    this.hitboxH = 20.0;\n\n    this.falling = false;\n\n    this.xOffset = 0.0;\n    this.yOffset = 0.0;\n\n    this.timer = new Timer(200, () => {\n      this.x = this.baseX;\n      this.y = this.baseY;\n\n      this.falling = true;\n\n      this.audio.play('square', 500, 150, 0.5);\n    });\n\n    this.timer.enabled = false;\n\n    this.fell = false;\n  }\n\n  init(sprite) {\n    super.init(sprite);\n\n    this.baseX = this.x;\n    this.baseY = this.y;\n  }\n\n  update() {\n    if (!this.fell) {\n      this.timer.update();\n\n      if (!(this.gib.left - 50.0 > this.right ||\n            this.gib.right + 50.0 < this.left ||\n            this.gib.bottom < this.top ||\n            this.gib.top - 100.0 > this.bottom) && !this.falling) {\n        this.timer.enabled = true;\n      }\n\n      if (this.timer.enabled) {\n        const xOffset = Math.random() * 8.0 - 4.0;\n        const yOffset = Math.random() * 8.0 - 4.0;\n\n        this.x = this.baseX + xOffset;\n        this.y = this.baseY + yOffset;\n      }\n\n      if (this.falling) {\n        if (this.tileAt(0.0, 1.0)) {\n          this.ay = 0.0;\n          this.dy = 0.0;\n\n          this.falling = false;\n          this.fell = true;\n\n          this.renderer.shake();\n\n          for (let i = 0; i < 50; i++) {\n            this.particleSystem.emitParticle(\n              this.left + Math.random() * this.hitboxW,\n              this.top + Math.random() * this.hitboxH,\n              0.86, 0.53, 0.33,\n              (Math.random() - 0.5) * 0.25, -Math.random() * 0.125,\n              700.0\n            );\n          }\n        } else {\n          this.ay = 0.007;\n\n          if (!(this.gib.left > this.right || this.gib.right < this.left ||\n            this.gib.top > this.bottom || this.gib.bottom < this.top)) {\n            this.gib.damage();\n          }\n        }\n      }\n    }\n\n    super.update();\n  }\n}\n","import SpriteController from \"../SpriteController\";\n\nexport default class extends SpriteController {\n  constructor(renderer, map, gib, particleSystem, parent) {\n    super(map);\n\n    this.renderer = renderer;\n    this.gib = gib;\n    this.particleSystem = particleSystem;\n    this.parent = parent;\n\n    this.hitboxX = 8.0;\n    this.hitboxY = 8.0;\n    this.hitboxW = 48.0;\n    this.hitboxH = 48.0;\n\n    this.direction = RIGHT;\n    this.tolerance = 0;\n  }\n\n  update() {\n    switch (this.direction) {\n    case UP:\n      if (this.tolerance === 0 && !this.tileAt(9.0, 0.0)) {\n        this.direction = RIGHT;\n        this.tolerance = 10;\n        this.y = Math.floor(this.y);\n      } else {\n        this.dx = 0.0;\n        this.dy = -0.1;\n      }\n      break;\n    case DOWN:\n      if (this.tolerance === 0 && !this.tileAt(-9.0, 0.0)) {\n        this.direction = LEFT;\n        this.tolerance = 10;\n        this.y = Math.floor(this.y);\n      } else {\n        this.dx = 0.0;\n        this.dy = 0.1;\n      }\n      break;\n    case LEFT:\n      if (this.tolerance === 0 && !this.tileAt(0.0, -9.0)) {\n        this.direction = UP;\n        this.tolerance = 10;\n        this.x = Math.floor(this.x);\n      } else {\n        this.dx = -0.1;\n        this.dy = 0.0;\n      }\n      break;\n    case RIGHT:\n      if (this.tolerance === 0 && !this.tileAt(0.0, 9.0)) {\n        this.direction = DOWN;\n        this.tolerance = 10;\n        this.x = Math.floor(this.x);\n      } else {\n        this.dx = 0.1;\n        this.dy = 0.0;\n      }\n      break;\n    }\n\n    this.tolerance--;\n\n    if (this.tolerance < 0) {\n      this.tolerance = 0;\n    }\n\n    super.update();\n\n    if (!(this.gib.left > this.right || this.gib.right < this.left ||\n      this.gib.top > this.bottom || this.gib.bottom < this.top)) {\n      this.gib.damage();\n    }\n  }\n\n  laserHit() {\n    return this.parent.laserHit();\n  }\n\n  explode() {\n    this.sprite.disable();\n\n    for (let i = 0; i < 50; i++) {\n      this.particleSystem.emitParticle(\n        this.left + Math.random() * this.hitboxW,\n        this.top + Math.random() * this.hitboxH,\n        0.0, 0.8, 0.33,\n        (Math.random() - 0.5) * 0.25, (Math.random() - 0.5) * 0.25,\n        200.0\n      );\n    }\n  }\n}\n","import WormSegment from \"./WormSegment\";\n\nexport default class extends WormSegment {\n  constructor(renderer, map, spriteSheet, gib, particleSystem, audio) {\n    super(renderer, map, gib, particleSystem);\n\n    this.spriteSheet = spriteSheet;\n    this.audio = audio;\n\n    this.health = 5;\n  }\n\n  init(sprite) {\n    super.init(sprite);\n\n    this.middle = new WormSegment(this.renderer, this.map, this.gib,\n                                  this.particleSystem, this);\n\n    this.tail = new WormSegment(this.renderer, this.map, this.gib,\n                                this.particleSystem, this);\n\n    this.spriteSheet.spawnSprite(\n      this.sprite.x - 47, this.sprite.y, MAP_Z, 7.0, 1.0, this.middle\n    );\n\n    this.spriteSheet.spawnSprite(\n      this.sprite.x - 94, this.sprite.y, MAP_Z, 7.0, 1.0, this.tail\n    );\n  }\n\n  laserHit() {\n    this.health--;\n\n    this.sprite.flash();\n    this.middle.sprite.flash();\n    this.tail.sprite.flash();\n\n    if (this.health <= 0) {\n      this.explode();\n      this.middle.explode();\n      this.tail.explode();\n\n      this.audio.play('square', 600, 100, 0.5);\n    }\n\n    return true;\n  }\n}\n","import SpriteController from \"../SpriteController\";\n\nexport default class extends SpriteController {\n  constructor(renderer, map, gib, particleSystem, textLayer, audio) {\n    super(map);\n\n    this.renderer = renderer;\n    this.gib = gib;\n    this.particleSystem = particleSystem;\n    this.textLayer = textLayer;\n    this.audio = audio;\n\n    this.hitboxX = 12.0;\n    this.hitboxY = 24.0;\n    this.hitboxW = 40.0;\n    this.hitboxH = 40.0;\n  }\n\n  update() {\n    if (!(this.gib.left > this.right || this.gib.right < this.left ||\n          this.gib.top > this.bottom || this.gib.bottom < this.top)) {\n      this.collected();\n      this.sprite.disable();\n\n      const count = 50;\n\n      for (let i = 0; i < count; i++) {\n        const angle = (2.0 * Math.PI / count) * i;\n\n        this.particleSystem.emitParticle(\n          this.left + this.hitboxW / 2.0, this.top + this.hitboxH / 2.0,\n          0.53, 0.0, 0.0,\n          Math.cos(angle) * 0.2 + (Math.random() - 0.5) * 0.05,\n          Math.sin(angle) * 0.2 + (Math.random() - 0.5) * 0.05,\n          700.0\n        );\n      }\n    }\n\n    super.update();\n  }\n}\n","import Item from \"./Item\";\n\nexport default class extends Item {\n  constructor(game, renderer, map, gib, particleSystem, textLayer, audio) {\n    super(renderer, map, gib, particleSystem, textLayer, audio);\n\n    this.game = game;\n  }\n\n  collected() {\n    this.game.won();\n  }\n}\n","import SpriteController from \"../SpriteController\";\nimport Teleportation from '../items/Teleportation';\n\nexport default class extends SpriteController {\n  constructor(game, renderer, map, spriteSheet, gib, particleSystem, textLayer,\n              audio) {\n    super(map);\n\n    this.game = game;\n    this.renderer = renderer;\n    this.spriteSheet = spriteSheet;\n    this.gib = gib;\n    this.particleSystem = particleSystem;\n    this.textLayer = textLayer;\n    this.audio = audio;\n\n    this.eyes = [];\n    this.segments = [];\n  }\n\n  damage() {\n    const health = this.eyes.reduce((memo, eye) => memo + eye.health, 0);\n\n    if (health <= 0) {\n      for (const segment of this.segments) {\n        segment.explode();\n      }\n\n      this.spriteSheet.spawnSprite(\n        this.teleportationX, this.teleportationY, DECAL_Z, 3.0, 2.0,\n        new Teleportation(this.game, this.renderer, this.map, this.gib,\n                          this.particleSystem, this.textLayer, this.audio)\n      );\n\n      this.audio.play('square', 600, 100, 1.0);\n\n      this.textLayer.helpText = null;\n    } else {\n      let text = 'BOSS ';\n\n      for (let i = 0; i < Math.max(18, health); i++) {\n        text += health > i ? '<' : '/';\n      }\n\n      this.textLayer.helpText = this.textLayer.createCenteredSegment(\n        550, text, 32\n      );\n    }\n  }\n}\n","import SpriteController from \"../SpriteController\";\n\nexport default class extends SpriteController {\n  constructor(map, particleSystem) {\n    super(map);\n\n    this.particleSystem = particleSystem;\n  }\n\n  explode() {\n    this.sprite.disable();\n\n    for (let i = 0; i < 50; i++) {\n      this.particleSystem.emitParticle(\n        this.left + Math.random() * this.hitboxW,\n        this.top + Math.random() * this.hitboxH,\n        0.0, 0.8, 0.33,\n        (Math.random() - 0.5) * 0.25, (Math.random() - 0.5) * 0.25,\n        2500.0\n      );\n    }\n  }\n}\n","import SpriteController from \"./SpriteController\";\n\nexport default class extends SpriteController {\n  constructor(map, dx, dy, gib, particleSystem) {\n    super(map);\n\n    this.dx = dx;\n    this.dy = dy;\n\n    this.gib = gib;\n    this.particleSystem = particleSystem;\n\n    this.hitboxX = 24.0;\n    this.hitboxY = 24.0;\n    this.hitboxW = 16.0;\n    this.hitboxH = 16.0;\n\n    this.maxDx = 1.0;\n    this.maxDy = 1.0;\n\n    this.ignoreCollisions = true;\n  }\n\n  update() {\n    super.update();\n\n    if (this.tileAt()) {\n      this.sprite.disable();\n      this.explode();\n      return;\n    }\n\n    const type = Math.random() > 0.5;\n\n    const r = type ? 0.8 : 1.0;\n    const g = type ? 0.26 : 0.46;\n    const b = type ? 0.8 : 0.46;\n\n    if (Math.random() > 0.6) {\n      this.particleSystem.emitParticle(\n        this.left + this.hitboxW / 2.0 + (Math.random() - 0.5) * this.hitboxW,\n        this.top + this.hitboxH / 2.0 + (Math.random() - 0.5) * this.hitboxH,\n        r, g, b,\n        0.0, 0.0,\n        500.0\n      );\n    }\n\n    if (!(this.gib.left > this.right || this.gib.right < this.left ||\n      this.gib.top > this.bottom || this.gib.bottom < this.top)) {\n      this.gib.damage();\n      this.sprite.disable();\n      this.explode();\n    }\n\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n  }\n\n  explode() {\n    for (let i = 0; i < 20; i++) {\n      const type = Math.random() > 0.5;\n\n      const r = type ? 0.8 : 1.0;\n      const g = type ? 0.26 : 0.46;\n      const b = type ? 0.8 : 0.46;\n\n      this.particleSystem.emitParticle(\n        this.left + Math.random() * this.hitboxW,\n        this.top + Math.random() * this.hitboxH,\n        r, g, b,\n        (Math.random() - 0.5) * 0.25, (Math.random() - 0.5) * 0.25,\n        200.0\n      );\n    }\n  }\n}\n","import BossSegment from \"./BossSegment\";\nimport Timer from \"../Timer\";\nimport Poison from \"../Poison\";\n\nexport default class extends BossSegment {\n  constructor(map, boss, gib, spriteSheet, particleSystem, audio) {\n    super(map, particleSystem);\n\n    this.boss = boss;\n    this.gib = gib;\n    this.spriteSheet = spriteSheet;\n    this.audio = audio;\n\n    this.hitboxX = 8.0;\n    this.hitboxY = 8.0;\n    this.hitboxW = 48.0;\n    this.hitboxH = 48.0;\n\n    this.angle = 0.0;\n\n    this.health = 3;\n\n    this.ignoreCollisions = true;\n\n    this.poisonTimer = new Timer(2500 + Math.random() * 5000, () => {\n      this.shoot();\n      this.poisonTimer.timeout = 2500 + Math.random() * 5000;\n    }, true);\n  }\n\n  init(sprite) {\n    super.init(sprite);\n\n    this.baseX = this.x;\n    this.baseY = this.y + 64.0;\n  }\n\n  update() {\n    this.poisonTimer.update();\n\n    this.angle = Math.atan2(\n      (this.gib.top + this.gib.hitboxH / 2) - (this.baseY + this.hitboxH / 2),\n      (this.gib.left + this.gib.hitboxW / 2) - (this.baseX + this.hitboxW / 2)\n    );\n\n    this.x = this.baseX + Math.cos(this.angle) * 32;\n    this.y = this.baseY + Math.sin(this.angle) * 32;\n\n    super.update();\n\n    if (!(this.gib.left > this.right || this.gib.right < this.left ||\n      this.gib.top > this.bottom || this.gib.bottom < this.top)) {\n      this.gib.damage();\n    }\n  }\n\n  shoot() {\n    const dx = Math.cos(this.angle) * 0.2;\n    const dy = Math.sin(this.angle) * 0.2;\n\n    this.spriteSheet.spawnSprite(\n      this.left + this.hitboxW / 2 - 32, this.top + this.hitboxH / 2 - 32,\n      PROJECTILE_Z, 1.0, 2.0,\n      new Poison(this.map, dx, dy, this.gib, this.particleSystem)\n    );\n  }\n\n  laserHit() {\n    this.health--;\n    this.boss.damage();\n\n    this.sprite.flash();\n\n    if (this.health <= 0) {\n      this.explode();\n\n      this.audio.play('square', 300, 100, 0.3);\n    }\n\n    return true;\n  }\n}\n","import Item from \"./Item\";\n\nexport default class extends Item {\n  collected() {\n    this.gib.abilities.propulsion = true;\n\n    this.textLayer.titleText = this.textLayer.createCenteredSegment(\n      220, 'PROPULSION SYSTEM ONLINE', 32, TEXT_ANIMATED, 0, 2500\n    );\n\n    this.textLayer.helpText = this.textLayer.createCenteredSegment(\n      176, ' USE A GAMEPAD OR\\nTHE ARROWS TO MOVE', 32, TEXT_ANIMATED,\n      2500, 3500\n    );\n\n    this.audio.speak('PROPULSION SYSTEM ONLINE');\n  }\n}\n","import Item from \"./Item\";\n\nexport default class extends Item {\n  collected() {\n    this.gib.abilities.elevation = true;\n\n    this.textLayer.titleText = this.textLayer.createCenteredSegment(\n      220, 'ELEVATION SYSTEM ONLINE', 32, TEXT_ANIMATED, 0, 2500\n    );\n\n    this.textLayer.helpText = this.textLayer.createCenteredSegment(\n      220, 'PRESS X TO JUMP', 32, TEXT_ANIMATED, 2500, 2500\n    );\n\n    this.audio.speak('ELEVATION SYSTEM ONLINE');\n  }\n}\n","import Item from \"./Item\";\n\nexport default class extends Item {\n  collected() {\n    this.gib.abilities.excavation = true;\n\n    this.textLayer.titleText = this.textLayer.createCenteredSegment(\n      220, 'EXCAVATION SYSTEM ONLINE', 32, TEXT_ANIMATED, 0, 2500\n    );\n\n    this.textLayer.helpText = this.textLayer.createCenteredSegment(\n      220, 'HOLD Z TO BREAK BRICKS', 32, TEXT_ANIMATED, 2500, 2500\n    );\n\n    this.audio.speak('EXCAVATION SYSTEM ONLINE');\n  }\n}\n","import Item from \"./Item\";\n\nexport default class extends Item {\n  collected() {\n    this.gib.abilities.extermination = true;\n\n    this.textLayer.titleText = this.textLayer.createCenteredSegment(\n      220, 'EXTERMINATION SYSTEM ONLINE', 32, TEXT_ANIMATED, 0, 2500\n    );\n\n    this.textLayer.helpText = this.textLayer.createCenteredSegment(\n      220, 'PRESS Z TO FIRE', 32, TEXT_ANIMATED, 2500, 2500\n    );\n\n    this.audio.speak('EXTERMINATION SYSTEM ONLINE');\n  }\n}\n","import Item from \"./Item\";\n\nexport default class extends Item {\n  collected() {\n    this.gib.abilities.flotation = true;\n\n    this.textLayer.titleText = this.textLayer.createCenteredSegment(\n      220, 'FLOTATION SYSTEM ONLINE', 32, TEXT_ANIMATED, 0, 2500\n    );\n\n    this.textLayer.helpText = this.textLayer.createCenteredSegment(\n      220, 'PRESS X AGAIN TO JUMP HIGHER', 32, TEXT_ANIMATED, 2500, 2500\n    );\n\n    this.audio.speak('FLOTATION SYSTEM ONLINE');\n  }\n}\n","import Item from \"./Item\";\n\nexport default class extends Item {\n  collected() {\n    this.gib.lives++;\n    this.gib.updateLives();\n\n    this.audio.speak('DAMAGE REPAIRED!');\n  }\n}\n","import map from '../assets/map.txt';\nimport Gib from './Gib';\nimport Brick from './Brick';\nimport Rock from './enemies/Rock';\nimport WormHead from './enemies/WormHead';\nimport Boss from './enemies/Boss';\nimport BossSegment from './enemies/BossSegment';\nimport BossEye from './enemies/BossEye';\nimport Propulsion from './items/Propulsion';\nimport Elevation from './items/Elevation';\nimport Excavation from './items/Excavation';\nimport Extermination from './items/Extermination';\nimport Flotation from './items/Flotation';\nimport Heart from './items/Heart';\n\nexport default class {\n  constructor(game, renderer, spriteSheet, input, particleSystem, textLayer,\n              audio) {\n    const gib = new Gib(game, renderer, this, spriteSheet, input,\n                        particleSystem, textLayer, audio);\n\n    this.boss = new Boss(game, renderer, this, spriteSheet, gib, particleSystem,\n                         textLayer, audio);\n\n    this.tiles = [];\n\n    const rows = map.split('\\n');\n\n    let i = 0;\n\n    for (let y = 0; y < rows.length; y++) {\n      this.tiles.push([]);\n\n      for (let x = 0; x < rows[y].length; x++) {\n        const type = rows[y][x];\n\n        let u = null;\n        let v = 0;\n        let controller = null;\n\n        let segment = null;\n\n        switch (type) {\n        case '1':\n          u = 0;\n          break;\n        case '2':\n          u = 1;\n          break;\n        case 'B':\n          u = 1;\n          v = 1;\n          controller = new Brick(renderer, this, particleSystem);\n          break;\n        case 'R':\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, DECAL_Z, 6.0, 0.0,\n            new Rock(renderer, this, gib, particleSystem, audio)\n          );\n          break;\n        case 'W':\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y + 8, MAP_Z, 7.0, 0.0,\n            new WormHead(renderer, this, spriteSheet, gib, particleSystem,\n                         audio)\n          );\n          break;\n        case '/':\n          segment = new BossSegment(this, particleSystem);\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, MAP_Z, 4.0, 2.0, segment\n          );\n          this.boss.segments.push(segment);\n          break;\n        case '\\\\':\n          segment = new BossSegment(this, particleSystem);\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, MAP_Z, 5.0, 2.0, segment\n          );\n          this.boss.segments.push(segment);\n          break;\n        case 'S':\n          segment = new BossSegment(this, particleSystem);\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, MAP_Z, 6.0, 2.0, segment\n          );\n          this.boss.segments.push(segment);\n          break;\n        case 'O':\n          const eye = new BossEye(this, this.boss, gib, spriteSheet,\n                                  particleSystem, audio);\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, MAP_Z, 7.0, 2.0, eye\n          );\n          this.boss.eyes.push(eye);\n          break;\n        case 'D':\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, DECAL_Z, 0.0, 1.0\n          );\n          break;\n        case 'G':\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, GIB_Z, 2.0, 0.0, gib,\n            [[2.0, 0.0], [3.0, 0.0], [4.0, 0.0], [5.0, 0.0]]\n          );\n          break;\n        case 'P':\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, DECAL_Z, 2.0, 1.0,\n            new Propulsion(renderer, this, gib, particleSystem, textLayer,\n                           audio)\n          );\n          break;\n        case 'E':\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, DECAL_Z, 3.0, 1.0,\n            new Elevation(renderer, this, gib, particleSystem, textLayer,\n                          audio)\n          );\n          break;\n        case 'X':\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, DECAL_Z, 4.0, 1.0,\n            new Excavation(renderer, this, gib, particleSystem, textLayer,\n                           audio)\n          );\n          break;\n        case 'L':\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, DECAL_Z, 5.0, 1.0,\n            new Extermination(renderer, this, gib, particleSystem, textLayer,\n                              audio)\n          );\n          break;\n        case 'F':\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, DECAL_Z, 6.0, 1.0,\n            new Flotation(renderer, this, gib, particleSystem, textLayer,\n                          audio)\n          );\n          break;\n        case 'T':\n          this.boss.teleportationX = SPRITE_SIZE * x;\n          this.boss.teleportationY = SPRITE_SIZE * y;\n          break;\n        case 'H':\n          spriteSheet.spawnSprite(\n            SPRITE_SIZE * x, SPRITE_SIZE * y, DECAL_Z, 2.0, 2.0,\n            new Heart(renderer, this, gib, particleSystem, textLayer,\n                      audio)\n          );\n          break;\n        }\n\n        if (u === null) {\n          this.tiles[y].push(null);\n\n          continue;\n        }\n\n        spriteSheet.spawnSprite(\n          SPRITE_SIZE * x, SPRITE_SIZE * y, MAP_Z, u, v, controller\n        );\n\n        this.tiles[y].push(controller || type);\n      }\n    }\n  }\n\n  tileAt(x, y) {\n    const row = this.tiles[Math.floor(y / SPRITE_SIZE)];\n\n    if (!row) {\n      return null;\n    }\n\n    return row[Math.floor(x / SPRITE_SIZE)];\n  }\n\n  setTileAt(x, y, type) {\n    const row = this.tiles[Math.floor(y / SPRITE_SIZE)];\n\n    if (!row) {\n      return;\n    }\n\n    row[Math.floor(x / SPRITE_SIZE)] = type;\n  }\n\n  prevTileOffset(x) {\n    return (Math.floor(x / SPRITE_SIZE) + 1) * SPRITE_SIZE - x;\n  }\n\n  nextTileOffset(x) {\n    return x - Math.floor(x / SPRITE_SIZE) * SPRITE_SIZE;\n  }\n}\n","import Timer from \"./Timer\";\n\nexport default class {\n  constructor(game, input, textLayer, audio) {\n    this.game = game;\n    this.input = input;\n    this.textLayer = textLayer;\n    this.audio = audio;\n\n    textLayer.titleText = textLayer.createCenteredSegment(\n      8, 'GIB', 256, TEXT_ANIMATED\n    );\n\n    textLayer.helpText = textLayer.createCenteredSegment(\n      480, 'PRESS START TO BEGIN', 32, TEXT_FLASHING, 600\n    );\n\n    this.loaded = false;\n    this.started = false;\n\n    this.timer = new Timer(1000);\n  }\n\n  update() {\n    this.timer.update();\n\n    if (!this.loaded) {\n      this.loaded = true;\n    }\n\n    if (this.input.justPressed(ACTION_A) && !this.timer.enabled) {\n      this.textLayer.titleText = null;\n      this.textLayer.helpText = null;\n\n      this.game.start();\n    }\n  }\n}\n","import Timer from \"./Timer\";\n\nexport default class {\n  constructor(game, input, textLayer, audio) {\n    this.game = game;\n    this.input = input;\n    this.textLayer = textLayer;\n    this.audio = audio;\n\n    textLayer.titleText = textLayer.createCenteredSegment(\n      50, 'SYSTEMS OFFLINE', 64, TEXT_ANIMATED\n    );\n\n    textLayer.helpText = textLayer.createCenteredSegment(\n      200, 'PRESS X TO DROP', 32, TEXT_FLASHING, 600\n    );\n\n    this.loaded = false;\n    this.started = false;\n\n    this.timer = new Timer(1000);\n  }\n\n  update() {\n    this.timer.update();\n\n    if (!this.loaded) {\n      this.audio.speak('SYSTEMS OFFLINE');\n\n      this.loaded = true;\n    }\n\n    if (this.input.justPressed(ACTION_A) && !this.timer.enabled) {\n      this.textLayer.titleText = null;\n      this.textLayer.helpText = null;\n\n      this.started = true;\n    }\n  }\n}\n","import Timer from \"./Timer\";\n\nexport default class {\n  constructor(game, input, textLayer, audio) {\n    this.game = game;\n    this.input = input;\n    this.textLayer = textLayer;\n    this.audio = audio;\n\n    textLayer.titleText = textLayer.createCenteredSegment(\n      50, 'CRITICAL\\nMISSION\\nFAILURE', 64, TEXT_ANIMATED\n    );\n\n    textLayer.helpText = textLayer.createCenteredSegment(\n      500, 'PRESS START TO TRY AGAIN', 32, TEXT_FLASHING, 2000\n    );\n\n    this.audio.speak('CRITICAL MISSION FAILURE!');\n\n    this.started = false;\n\n    this.timer = new Timer(2500);\n  }\n\n  update() {\n    this.timer.update();\n\n    if (this.input.justPressed(ACTION_A) && !this.timer.enabled) {\n      this.textLayer.titleText = null;\n      this.textLayer.helpText = null;\n\n      this.game.load();\n      this.started = true;\n    }\n  }\n}\n","export default class {\n  constructor(game, input, textLayer, audio) {\n    this.game = game;\n    this.input = input;\n    this.textLayer = textLayer;\n    this.audio = audio;\n\n    textLayer.titleText = textLayer.createCenteredSegment(\n      50, 'ALL SYSTEMS\\n  ONLINE', 64, TEXT_ANIMATED\n    );\n\n    textLayer.helpText = textLayer.createCenteredSegment(\n      500, 'CONGRATULATIONS', 32, TEXT_ANIMATED, 1000\n    );\n\n    this.audio.speak('ALL SYSTEMS ONLINE! CONGRATULATIONS!');\n\n    this.started = true;\n  }\n\n  update() {}\n}\n","import Game from './Game';\n\nconst game = new Game();\n\nconst updateGame = timestamp => {\n  requestAnimationFrame(updateGame);\n\n  game.update(timestamp);\n  game.render();\n};\n\nrequestAnimationFrame(updateGame);\n","import Renderer from './Renderer';\nimport Input from './Input';\nimport SpriteSheet from './SpriteSheet';\nimport ParticleSystem from './ParticleSystem';\nimport TextLayer from './TextLayer';\nimport Audio from './Audio';\nimport Map from './Map';\nimport Title from './Title';\nimport Start from './Start';\nimport GameOver from './GameOver';\nimport Victory from './Victory';\nimport Timer from './Timer';\n\nexport default class {\n  constructor() {\n    this.renderer = new Renderer(this);\n    this.input = new Input();\n\n    this.spriteSheet = new SpriteSheet(this.renderer);\n    this.particleSystem = new ParticleSystem(this.renderer);\n    this.textLayer = new TextLayer(this.renderer);\n    this.audio = new Audio();\n\n    this.load();\n\n    this.title = new Title(this, this.input, this.textLayer, this.audio);\n\n    this.lastTimestamp = 0;\n    this.timeAccumulator = 0;\n\n    this.loaded = false;\n\n    this.celebrationTimer = new Timer(Math.random() * 300, () => {\n      const x = this.renderer.cameraX + Math.random() * SCREEN_WIDTH;\n      const y = this.renderer.cameraY + Math.random() * SCREEN_HEIGHT;\n\n      const type = Math.random();\n\n      let r = 0.0;\n      let g = 0.0;\n      let b = 0.0;\n\n      if (type < 0.16) {\n        r = 0.73;\n        g = 0.73;\n        b = 0.73;\n      } else if (type < 0.33) {\n        r = 0.0;\n        g = 0.8;\n        b = 0.33;\n      } else if (type < 0.5) {\n        r = 0.0;\n        g = 0.0;\n        b = 0.66;\n      } else if (type < 0.66) {\n        r = 0.66;\n        g = 1.0;\n        b = 0.93;\n      } else if (type < 0.83) {\n        r = 0.8;\n        g = 0.26;\n        b = 0.8;\n      } else {\n        r = 1.0;\n        g = 0.46;\n        b = 0.46;\n      }\n\n      for (let i = 0; i < 80; i++) {\n        const angle = (2.0 * Math.PI / 80) * i;\n\n        this.particleSystem.emitParticle(\n          x, y,\n          r, g, b,\n          Math.cos(angle) * 0.1 + (Math.random() - 0.5) * 0.03,\n          Math.sin(angle) * 0.1 + (Math.random() - 0.5) * 0.03,\n          1000.0\n        );\n      }\n\n      this.audio.play('sawtooth', 100, 150, 0.2);\n\n      this.celebrationTimer.timeout = Math.random() * 300;\n    }, true);\n\n    this.celebrationTimer.enabled = false;\n  }\n\n  load() {\n    this.spriteSheet.reset();\n\n    this.map = new Map(this, this.renderer, this.spriteSheet, this.input,\n                       this.particleSystem, this.textLayer, this.audio);\n  }\n\n  update(timestamp) {\n    const deltaTime = timestamp - this.lastTimestamp;\n    this.lastTimestamp = timestamp;\n\n    if (deltaTime > 2500) {\n      return;\n    }\n\n    this.timeAccumulator += deltaTime;\n\n    while (this.timeAccumulator >= TIME_STEP) {\n      if (this.loaded) {\n        this.input.update();\n\n        if (!this.title.started) {\n          this.title.update();\n        } else {\n          this.celebrationTimer.update();\n          this.spriteSheet.update();\n        }\n\n        this.particleSystem.update();\n        this.textLayer.update();\n\n        this.renderer.update();\n      }\n\n      this.timeAccumulator -= TIME_STEP;\n    }\n  }\n\n  render() {\n    this.renderer.clear();\n\n    this.spriteSheet.draw();\n    this.particleSystem.draw();\n    this.textLayer.draw();\n  }\n\n  start() {\n    this.title = new Start(this, this.input, this.textLayer, this.audio);\n  }\n\n  over() {\n    this.title = new GameOver(this, this.input, this.textLayer, this.audio);\n    this.spriteSheet.update();\n  }\n\n  won() {\n    this.title = new Victory(this, this.input, this.textLayer, this.audio);\n    this.celebrationTimer.enabled = true;\n  }\n}\n"],"names":["numComponents","gl","type","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","FLOAT_MAT3","FLOAT_MAT4","Shader","constructor","vertexShaderSource","fragmentShaderSource","this","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","uniforms","numUniforms","getProgramParameter","ACTIVE_UNIFORMS","i","uniform","getActiveUniform","location","getUniformLocation","name","push","attributes","stride","numAttribs","ACTIVE_ATTRIBUTES","attribute","getActiveAttrib","getAttribLocation","components","sort","a","b","use","useProgram","offset","enableVertexAttribArray","vertexAttribPointer","uniform1f","uniform2fv","FLOAT_MAT2","uniformMatrix2fv","uniformMatrix4fv","Timer","timeout","callback","repeating","progress","enabled","update","reset","Renderer","game","canvas","document","createElement","width","height","body","appendChild","getContext","antialias","enable","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","clearColor","spriteShader","particleShader","textShader","projection","Float32Array","view","cameraX","cameraY","texture","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","setUpTexture","image","Image","addEventListener","loaded","crossOrigin","src","shakeTimer","shakeIntensity","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","createVertexBuffer","size","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","updateVertex","index","vertex","bufferSubData","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","shake","intensity","Math","random","round","draw","shader","count","drawArrays","POINTS","InputDevice","pressedMask","lastPressedMask","justPressedMask","justReleasedMask","x","y","pressed","code","justPressed","justReleased","KEY_UP","KEY_DOWN","KEY_LEFT","KEY_RIGHT","KEY_W","KEY_S","KEY_A","KEY_D","KEY_X","KEY_Z","KEY_K","KEY_J","KEY_SPACE","keyCodeMapping","KeyboardInput","super","event","keyCode","preventDefault","GamepadInput","process","gamepad","buttons","filter","_","some","button","every","axes","length","Input","devices","navigator","getGamepads","gamepadInput","find","device","deviceX","deviceY","Sprite","active","inactivate","z","u","v","tint","oldX","oldY","oldZ","oldU","oldV","oldTint","canFlash","flashTimer","spawn","controller","frames","init","currentFrame","frameDirection","frameTimer","changed","flash","disable","MAX_SPRITES","SpriteSheet","renderer","spriteVertex","VERTEX_SIZE","sprites","updateSprite","sprite","spawnSprite","MAX_PARTICLES","ParticleSystem","particleVertex","nextIndex","time","emitParticle","r","g","dx","dy","lifetime","TextSegment","textLayer","chars","style","timeOffset","visible","lastVisible","char","nextChar","timer","updateChar","startTimer","endTimer","hide","TextLayer","MAX_CHARS","charVertex","title","help","lives","titleText","text","helpText","livesText","getUV","charCode","charCodeAt","createSegment","string","cx","createCenteredSegment","maxWidth","line","split","Audio","context","AudioContext","speak","utterance","SpeechSynthesisUtterance","rate","pitch","speechSynthesis","play","startFrequency","finalFrequency","duration","oscillator","createOscillator","gain","createGain","frequency","setValueAtTime","currentTime","exponentialRampToValueAtTime","connect","destination","start","stop","SpriteController","map","ax","ay","hitboxX","hitboxY","hitboxW","hitboxH","maxDx","ignoreCollisions","left","right","top","bottom","tileAt","prevTileOffset","nextTileOffset","xOffset","yOffset","laserHit","Laser","direction","spriteSheet","particleSystem","explode","Gib","input","audio","abilities","propulsion","elevation","excavation","extermination","flotation","lastDirection","facing","invincible","invincibilityTimer","jumps","movementTimer","drillingTimer","lastPlatform","updateLives","tileLeft","tileRight","tileAbove","tileBelow","drilling","drill","kickUpDirt","sign","max","damage","over","tileType","Brick","integrity","setTileAt","Rock","gib","falling","baseX","baseY","fell","WormSegment","parent","tolerance","floor","WormHead","health","middle","tail","Item","collected","angle","PI","cos","sin","Teleportation","won","Boss","eyes","segments","reduce","memo","eye","segment","teleportationX","teleportationY","BossSegment","Poison","maxDy","BossEye","boss","poisonTimer","shoot","atan2","Propulsion","Elevation","Excavation","Extermination","Flotation","Heart","Map","tiles","rows","row","Title","started","Start","GameOver","load","Victory","lastTimestamp","timeAccumulator","celebrationTimer","timestamp","deltaTime","render","updateGame","requestAnimationFrame"],"mappings":"yBAAA,MAAMA,EAAgB,CAACC,EAAIC,KACzB,OAAQA,GACR,KAAKD,EAAGE,MACN,OAAO,EACT,KAAKF,EAAGG,WACN,OAAO,EACT,KAAKH,EAAGI,WACN,OAAO,EACT,KAAKJ,EAAGK,WACN,OAAO,EACT,KAAKL,EAAGM,WACN,OAAO,EACT,KAAKN,EAAGO,WACN,OAAO,GACR,EAGY,MAAAC,EACb,WAAAC,CAAYT,EAAIU,EAAoBC,GAClCC,KAAKZ,GAAKA,EAEV,MAAMa,EAAeb,EAAGc,aAAad,EAAGe,eACxCf,EAAGgB,aAAaH,EAAcH,GAC9BV,EAAGiB,cAAcJ,GAEjB,MAAMK,EAAiBlB,EAAGc,aAAad,EAAGmB,iBAC1CnB,EAAGgB,aAAaE,EAAgBP,GAChCX,EAAGiB,cAAcC,GAEjBN,KAAKQ,QAAUpB,EAAGqB,gBAClBrB,EAAGsB,aAAaV,KAAKQ,QAASP,GAC9Bb,EAAGsB,aAAaV,KAAKQ,QAASF,GAC9BlB,EAAGuB,YAAYX,KAAKQ,SAEpBR,KAAKY,SAAW,GAEhB,MAAMC,EAAczB,EAAG0B,oBAAoBd,KAAKQ,QACLpB,EAAG2B,iBAE9C,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAaG,IAAK,CACpC,MAAMC,EAAU7B,EAAG8B,iBAAiBlB,KAAKQ,QAASQ,GAC5CG,EAAW/B,EAAGgC,mBAAmBpB,KAAKQ,QAASS,EAAQI,MAE7DrB,KAAKiB,EAAQI,MAAQ,KAErBrB,KAAKY,SAASU,KACZ,CAAEjC,KAAM4B,EAAQ5B,KAAMgC,KAAMJ,EAAQI,KAAMF,SAAUA,GAEvD,CAEDnB,KAAKuB,WAAa,GAClBvB,KAAKwB,OAAS,EAEd,MAAMC,EAAarC,EAAG0B,oBAAoBd,KAAKQ,QACLpB,EAAGsC,mBAE7C,IAAK,IAAIV,EAAI,EAAGA,EAAIS,EAAYT,IAAK,CACnC,MAAMW,EAAYvC,EAAGwC,gBAAgB5B,KAAKQ,QAASQ,GAC7CG,EAAW/B,EAAGyC,kBAAkB7B,KAAKQ,QAASmB,EAAUN,MACxDS,EAAa3C,EAAcC,EAAIuC,EAAUtC,MAE/CW,KAAKuB,WAAWD,KACd,CAAED,KAAMM,EAAUN,KAAMF,SAAUA,EAAUW,WAAYA,IAG1D9B,KAAKwB,QAAuB,EAAbM,CAChB,CAED9B,KAAKuB,WAAWQ,MAAK,CAACC,EAAGC,IAAMD,EAAEX,KAAOY,EAAEZ,MAAQ,EAAI,GACvD,CAED,GAAAa,GACElC,KAAKZ,GAAG+C,WAAWnC,KAAKQ,SAExB,IAAI4B,EAAS,EAEb,IAAK,MAAMT,KAAa3B,KAAKuB,WAC3BvB,KAAKZ,GAAGiD,wBAAwBV,EAAUR,UAC1CnB,KAAKZ,GAAGkD,oBAAoBX,EAAUR,SAAUQ,EAAUG,WAC9B9B,KAAKZ,GAAGE,OAAO,EAAOU,KAAKwB,OAAQY,GAE/DA,GAAiC,EAAvBT,EAAUG,WAGtB,IAAK,MAAMb,KAAWjB,KAAKY,SACzB,OAAQK,EAAQ5B,MAChB,KAAKW,KAAKZ,GAAGE,MACXU,KAAKZ,GAAGmD,UAAUtB,EAAQE,SAAUnB,KAAKiB,EAAQI,OACjD,MACF,KAAKrB,KAAKZ,GAAGG,WACXS,KAAKZ,GAAGoD,WAAWvB,EAAQE,SAAUnB,KAAKiB,EAAQI,OAClD,MACF,KAAKrB,KAAKZ,GAAGqD,WACXzC,KAAKZ,GAAGsD,iBAAiBzB,EAAQE,UAAU,EAAOnB,KAAKiB,EAAQI,OAC/D,MACF,KAAKrB,KAAKZ,GAAGO,WACXK,KAAKZ,GAAGuD,iBAAiB1B,EAAQE,UAAU,EAAOnB,KAAKiB,EAAQI,OAIpE,ECpGY,MAAAuB,EACb,WAAA/C,CAAYgD,EAASC,EAAW,KAAMC,GAAY,GAChD/C,KAAK6C,QAAUA,EACf7C,KAAK8C,SAAWA,EAChB9C,KAAK+C,UAAYA,EAEjB/C,KAAKgD,SAAW,EAChBhD,KAAKiD,SAAU,CAChB,CAED,MAAAC,GACOlD,KAAKiD,UAIVjD,KAAKgD,UAAY,IAAA,GAEbhD,KAAKgD,UAAYhD,KAAK6C,UACpB7C,KAAK+C,UACP/C,KAAKgD,UAAYhD,KAAK6C,QAEtB7C,KAAKiD,SAAU,EAGbjD,KAAK8C,UACP9C,KAAK8C,YAGV,CAED,KAAAK,GACEnD,KAAKiD,SAAU,EACfjD,KAAKgD,SAAW,CACjB,ECrBY,MAAAI,EACb,WAAAvD,CAAYwD,GACV,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,MAAQ,KACfH,EAAOI,OAAS,IAChBH,SAASI,KAAKC,YAAYN,GAE1BtD,KAAKZ,GAAKkE,EAAOO,WAAW,QAAS,CAAEC,WAAW,IAElD9D,KAAKZ,GAAG2E,OAAO/D,KAAKZ,GAAG4E,YAEvBhE,KAAKZ,GAAG2E,OAAO/D,KAAKZ,GAAG6E,OACvBjE,KAAKZ,GAAG8E,UAAUlE,KAAKZ,GAAG+E,UAAWnE,KAAKZ,GAAGgF,qBAE7CpE,KAAKZ,GAAGiF,WAAW,EAAG,IAAM,EAAG,GAE/BrE,KAAKsE,aAAe,IAAI1E,EAAOI,KAAKZ,GC5BzB,+SCAA,qXF+BXY,KAAKuE,eAAiB,IAAI3E,EAAOI,KAAKZ,GG/B3B,8cCAA,6EJkCXY,KAAKwE,WAAa,IAAI5E,EAAOI,KAAKZ,GKlCvB,oSCAA,6QNqCXY,KAAKyE,WAAa,IAAIC,aAAa,CACjC,EAAM,KAAc,EAAK,EAAK,EAC9B,GAAM,EAAM,IAAe,EAAK,EAChC,EAAK,GAAM,EAAK,GACf,EAAK,EAAK,EAAK,IAGlB1E,KAAK2E,KAAO,IAAID,aAAa,CAC3B,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,EACf,EAAK,EAAK,EAAK,IAGjB1E,KAAK4E,QAAU,EACf5E,KAAK6E,QAAU,EAEf7E,KAAK8E,QAAU9E,KAAKZ,GAAG2F,gBAEvB/E,KAAKZ,GAAG4F,YAAYhF,KAAKZ,GAAG6F,WAAYjF,KAAK8E,SAC7C9E,KAAKZ,GAAG8F,WAAWlF,KAAKZ,GAAG6F,WAAY,EAAGjF,KAAKZ,GAAG+F,KAAM,EAAG,EAAG,EAC3CnF,KAAKZ,GAAG+F,KAAMnF,KAAKZ,GAAGgG,cACtB,IAAIC,WAAW,CAAC,EAAG,EAAG,IAAK,OAE9CrF,KAAKsF,eAEL,MAAMC,EAAQ,IAAIC,MAElBD,EAAME,iBAAiB,QAAQ,KAC7BzF,KAAKZ,GAAG4F,YAAYhF,KAAKZ,GAAG6F,WAAYjF,KAAK8E,SAC7C9E,KAAKZ,GAAG8F,WAAWlF,KAAKZ,GAAG6F,WAAY,EAAGjF,KAAKZ,GAAG+F,KAAMnF,KAAKZ,GAAG+F,KAC7CnF,KAAKZ,GAAGgG,cAAeG,GAE1CvF,KAAKsF,eAELjC,EAAKqC,QAAS,CAAI,IAGpBH,EAAMI,YAAc,GACpBJ,EAAMK,IAAM,qBAEZ5F,KAAK6F,WAAa,IAAIjD,EAAM,KAC5B5C,KAAK6F,WAAW5C,SAAU,EAC1BjD,KAAK8F,eAAiB,EACvB,CAED,YAAAR,GACEtF,KAAKZ,GAAG2G,cAAc/F,KAAKZ,GAAG6F,WAAYjF,KAAKZ,GAAG4G,eAC5BhG,KAAKZ,GAAG6G,eAC9BjG,KAAKZ,GAAG2G,cAAc/F,KAAKZ,GAAG6F,WAAYjF,KAAKZ,GAAG8G,eAC5BlG,KAAKZ,GAAG6G,eAC9BjG,KAAKZ,GAAG2G,cAAc/F,KAAKZ,GAAG6F,WAAYjF,KAAKZ,GAAG+G,mBAC5BnG,KAAKZ,GAAGgH,SAC9BpG,KAAKZ,GAAG2G,cAAc/F,KAAKZ,GAAG6F,WAAYjF,KAAKZ,GAAGiH,mBAC5BrG,KAAKZ,GAAGgH,QAC/B,CAED,kBAAAE,CAAmBC,GACjB,MAAMC,EAAexG,KAAKZ,GAAGqH,eAI7B,OAHAzG,KAAKZ,GAAGsH,WAAW1G,KAAKZ,GAAGuH,aAAcH,GACzCxG,KAAKZ,GAAGwH,WAAW5G,KAAKZ,GAAGuH,aAAcJ,EAAMvG,KAAKZ,GAAGyH,aAEhDL,CACR,CAED,YAAAM,CAAaN,EAAcO,EAAOC,GAChChH,KAAKZ,GAAGsH,WAAW1G,KAAKZ,GAAGuH,aAAcH,GAEzCxG,KAAKZ,GAAG6H,cAAcjH,KAAKZ,GAAGuH,aAAcI,EAAOC,EACpD,CAED,KAAAE,GACElH,KAAKZ,GAAG8H,MAAMlH,KAAKZ,GAAG+H,iBAAmBnH,KAAKZ,GAAGgI,iBAClD,CAED,KAAAC,CAAMC,EAAY,IAChBtH,KAAK8F,eAAiBwB,EACtBtH,KAAK6F,WAAW1C,OACjB,CAED,MAAAD,GACElD,KAAK6F,WAAW3C,SAEhBlD,KAAK2E,KAAK,KAAO3E,KAAK4E,QACtB5E,KAAK2E,KAAK,KAAO3E,KAAK6E,QAElB7E,KAAK6F,WAAW5C,UAClBjD,KAAK2E,KAAK,MAAQ4C,KAAKC,SAAW,IAAOxH,KAAK8F,eAC9C9F,KAAK2E,KAAK,MAAQ4C,KAAKC,SAAW,IAAOxH,KAAK8F,gBAGhD9F,KAAK2E,KAAK,IAAM4C,KAAKE,MAAMzH,KAAK2E,KAAK,KACrC3E,KAAK2E,KAAK,IAAM4C,KAAKE,MAAMzH,KAAK2E,KAAK,IACtC,CAED,IAAA+C,CAAKC,EAAQnB,EAAcoB,GACzB5H,KAAKZ,GAAGsH,WAAW1G,KAAKZ,GAAGuH,aAAcH,GAEzCmB,EAAOlD,WAAazE,KAAKyE,WACzBkD,EAAOhD,KAAO3E,KAAK2E,KAEnBgD,EAAOzF,MAEPlC,KAAKZ,GAAGyI,WAAW7H,KAAKZ,GAAG0I,OAAQ,EAAGF,EACvC,EO7IY,MAAAG,EACb,WAAAlI,CAAYkH,EAAQ,MAClB/G,KAAK+G,MAAQA,EAEb/G,KAAKgI,YAAc,EACnBhI,KAAKiI,gBAAkB,EACvBjI,KAAKkI,gBAAkB,EACvBlI,KAAKmI,iBAAmB,EAExBnI,KAAKoI,EAAI,EACTpI,KAAKqI,EAAI,CACV,CAED,MAAAnF,GACElD,KAAKkI,gBAAkBlI,KAAKgI,aAAehI,KAAKiI,gBAChDjI,KAAKmI,kBAAoBnI,KAAKgI,YAAchI,KAAKiI,gBAEjDjI,KAAKiI,gBAAkBjI,KAAKgI,WAC7B,CAED,OAAAM,CAAQC,GACN,OAAQvI,KAAKgI,YAAcO,KAAUA,CACtC,CAED,WAAAC,CAAYD,GACV,OAAQvI,KAAKkI,gBAAkBK,KAAUA,CAC1C,CAED,YAAAE,CAAaF,GACX,OAAQvI,KAAKmI,iBAAmBI,KAAUA,CAC3C,EC5BH,MAAMG,EAAS,UACTC,EAAW,YACXC,EAAW,YACXC,EAAY,aAEZC,EAAQ,OACRC,EAAQ,OACRC,EAAQ,OACRC,EAAQ,OAERC,EAAQ,OACRC,EAAQ,OAERC,EAAQ,OACRC,EAAQ,OAERC,EAAY,QAEZC,EAAiB,CACrB,GAAIb,EACJ,GAAIC,EACJ,GAAIC,EACJ,GAAIC,EAEJ,GAAIC,EACJ,GAAIE,EACJ,GAAID,EACJ,GAAIE,EAEJ,GAAIC,EACJ,GAAIC,EAEJ,GAAIC,EACJ,GAAIC,EAEJ,GAAIC,GAGS,MAAKE,UAASzB,EAC3B,WAAAlI,GACE4J,QAEAhE,iBAAiB,WAAWiE,IAG1B,OAFaA,EAAMnB,MAAQgB,EAAeG,EAAMC,UAGhD,KAAKjB,EAAQ,KAAKI,EAChB9I,KAAKgI,aAAe,EACpB0B,EAAME,iBACN,MACF,KAAKjB,EAAU,KAAKI,EAClB/I,KAAKgI,aAAe,EACpB0B,EAAME,iBACN,MACF,KAAKhB,EAAU,KAAKI,EAClBhJ,KAAKgI,aAAe,EACpB0B,EAAME,iBACN,MACF,KAAKf,EAAW,KAAKI,EACnBjJ,KAAKgI,aAAe,EACpB0B,EAAME,iBACN,MACF,KAAKV,EAAO,KAAKE,EAAO,KAAKE,EAC3BtJ,KAAKgI,aAAe,GACpB0B,EAAME,iBACN,MACF,KAAKT,EAAO,KAAKE,EACfrJ,KAAKgI,aAAe,GACpB0B,EAAME,iBAEP,IAGHnE,iBAAiB,SAASiE,IAGxB,OAFaA,EAAMnB,MAAQgB,EAAeG,EAAMC,UAGhD,KAAKjB,EAAQ,KAAKI,EAChB9I,KAAKgI,cAAe,EACpB0B,EAAME,iBACN,MACF,KAAKjB,EAAU,KAAKI,EAClB/I,KAAKgI,cAAe,EACpB0B,EAAME,iBACN,MACF,KAAKhB,EAAU,KAAKI,EAClBhJ,KAAKgI,cAAe,EACpB0B,EAAME,iBACN,MACF,KAAKf,EAAW,KAAKI,EACnBjJ,KAAKgI,cAAe,EACpB0B,EAAME,iBACN,MACF,KAAKV,EAAO,KAAKE,EAAO,KAAKE,EAC3BtJ,KAAKgI,cAAe,GACpB0B,EAAME,iBACN,MACF,KAAKT,EAAO,KAAKE,EACfrJ,KAAKgI,cAAe,GACpB0B,EAAME,iBAEP,GAEJ,CAED,MAAA1G,GACEuG,MAAMvG,SAENlD,KAAKoI,EAAI,EACTpI,KAAKqI,EAAI,EAELrI,KAAKsI,QAAQ,IACftI,KAAKqI,IAGHrI,KAAKsI,QAAQ,IACftI,KAAKqI,IAGHrI,KAAKsI,QAAQ,IACftI,KAAKoI,IAGHpI,KAAKsI,QAAQ,IACftI,KAAKoI,GAER,EC9HY,MAAKyB,UAAS9B,EAC3B,OAAA+B,CAAQC,GACFA,EAAQC,QAAQC,QAAO,CAACC,EAAGnD,IAAUA,EAAQ,GAAM,IACnCoD,MAAKC,GAAUA,EAAO9B,UACxCtI,KAAKgI,aAAe,GACX+B,EAAQC,QAAQC,QAAO,CAACC,EAAGnD,IAAUA,EAAQ,GAAM,IACnCsD,OAAMD,IAAWA,EAAO9B,YACjDtI,KAAKgI,cAAe,IAGlB+B,EAAQC,QAAQC,QAAO,CAACC,EAAGnD,IAAUA,EAAQ,GAAM,IACnCoD,MAAKC,GAAUA,EAAO9B,UACxCtI,KAAKgI,aAAe,GACX+B,EAAQC,QAAQC,QAAO,CAACC,EAAGnD,IAAUA,EAAQ,GAAM,IACnCsD,OAAMD,IAAWA,EAAO9B,YACjDtI,KAAKgI,cAAe,IAGtBhI,KAAKoI,EAAI,EACTpI,KAAKqI,EAAI,EAET,IAAK,IAAIrH,EAAI,EAAGA,EAAI+I,EAAQO,KAAKC,OAAQvJ,IACf,IAApB+I,EAAQO,KAAKtJ,KACXA,EAAI,GAAM,EACZhB,KAAKoI,EAAI2B,EAAQO,KAAKtJ,GAEtBhB,KAAKqI,EAAI0B,EAAQO,KAAKtJ,GAI7B,EC7BY,MAAAwJ,EACb,WAAA3K,GACEG,KAAKyK,QAAU,CAAC,IAAIjB,GAEpBxJ,KAAKoI,EAAI,EACTpI,KAAKqI,EAAI,CACV,CAED,MAAAnF,GACE,IAAK,MAAM6G,KAAWW,UAAUC,cAAe,CAC7C,IAAKZ,EACH,SAGF,IAAIa,EACF5K,KAAKyK,QAAQI,MAAKC,GAAUA,EAAO/D,QAAUgD,EAAQhD,QAElD6D,IACHA,EAAe,IAAIf,EAAaE,EAAQhD,OACxC/G,KAAKyK,QAAQnJ,KAAKsJ,IAGpBA,EAAad,QAAQC,EACtB,CAED,IAAK,MAAMe,KAAU9K,KAAKyK,QACxBK,EAAO5H,SAGT,MAAM6H,EAAU/K,KAAKyK,QAAQI,MAAKC,GAAuB,IAAbA,EAAO1C,IACnDpI,KAAKoI,EAAI2C,EAAUA,EAAQ3C,EAAI,EAE/B,MAAM4C,EAAUhL,KAAKyK,QAAQI,MAAKC,GAAuB,IAAbA,EAAOzC,IACnDrI,KAAKqI,EAAI2C,EAAUA,EAAQ3C,EAAI,CAChC,CAED,OAAAC,CAAQC,GACN,OAAOvI,KAAKyK,QAAQN,MAAKW,GAAUA,EAAOxC,QAAQC,IACnD,CAED,WAAAC,CAAYD,GACV,OAAOvI,KAAKyK,QAAQN,MAAKW,GAAUA,EAAOtC,YAAYD,IACvD,CAED,YAAAE,CAAaF,GACX,OAAOvI,KAAKyK,QAAQN,MAAKW,GAAUA,EAAOrC,aAAaF,IACxD,EC/CY,MAAA0C,EACb,WAAApL,GACEG,KAAKkL,QAAS,EACdlL,KAAKmL,YAAa,EAElBnL,KAAKoI,EAAI,EACTpI,KAAKqI,EAAI,EACTrI,KAAKoL,EAAI,EAETpL,KAAKqL,EAAI,EACTrL,KAAKsL,EAAI,EAETtL,KAAKuL,KAAO,EAEZvL,KAAKwL,KAAO,EACZxL,KAAKyL,KAAO,EACZzL,KAAK0L,KAAO,EAEZ1L,KAAK2L,KAAO,EACZ3L,KAAK4L,KAAO,EAEZ5L,KAAK6L,QAAU,EAEf7L,KAAK8L,UAAW,EAEhB9L,KAAK+L,WAAa,IAAInJ,EAAM,KAAK,KACb,IAAd5C,KAAKuL,MACPvL,KAAKuL,KAAO,EACZvL,KAAK+L,WAAW5I,SAEhBnD,KAAK8L,UAAW,CACjB,IAGH9L,KAAK+L,WAAW9I,SAAU,CAC3B,CAED,KAAA+I,CAAM5D,EAAGC,EAAG+C,EAAGC,EAAGC,EAAGW,EAAYC,GAC/BlM,KAAKkL,QAAS,EAEdlL,KAAKoI,EAAIA,EACTpI,KAAKqI,EAAIA,EACTrI,KAAKoL,EAAIA,EAETpL,KAAKqL,EAAIA,EACTrL,KAAKsL,EAAIA,EAETtL,KAAKuL,KAAO,EAEZvL,KAAKwL,KAAOxL,KAAKoI,EACjBpI,KAAKyL,KAAOzL,KAAKqI,EACjBrI,KAAK0L,KAAO1L,KAAKoL,EAEjBpL,KAAK2L,KAAO3L,KAAKqL,EACjBrL,KAAK4L,KAAO5L,KAAKsL,EAEjBtL,KAAK6L,QAAU7L,KAAKuL,KAEpBvL,KAAK8L,UAAW,EAEZG,IACFA,EAAWE,KAAKnM,MAEhBA,KAAKiM,WAAaA,GAGhBC,IACFlM,KAAKkM,OAASA,EACdlM,KAAKoM,aAAe,EACpBpM,KAAKqM,gBAAkB,EAEvBrM,KAAKsM,WAAa,IAAI1J,EAAM,KAAK,KAC/B5C,KAAKoM,cACFpM,KAAKoM,aAAepM,KAAKqM,gBAAkBrM,KAAKkM,OAAO3B,OAEtDvK,KAAKoM,aAAe,IACtBpM,KAAKoM,aAAepM,KAAKkM,OAAO3B,OAAS,GAG3CvK,KAAKqL,EAAIrL,KAAKkM,OAAOlM,KAAKoM,cAAc,GACxCpM,KAAKsL,EAAItL,KAAKkM,OAAOlM,KAAKoM,cAAc,EAAE,IACzC,GAEN,CAED,MAAAlJ,GACMlD,KAAKiM,YACPjM,KAAKiM,WAAW/I,SAGdlD,KAAKsM,YACPtM,KAAKsM,WAAWpJ,SAGlBlD,KAAK+L,WAAW7I,SAEZlD,KAAKmL,aACPnL,KAAKkL,QAAS,EACdlL,KAAKmL,YAAa,GAGfnL,KAAKkL,SACRlL,KAAKoI,EAAI,EACTpI,KAAKqI,EAAI,EACTrI,KAAKoL,EAAI,EAETpL,KAAKqL,EAAI,EACTrL,KAAKsL,EAAI,EAETtL,KAAKuL,KAAO,EAEZvL,KAAKiM,WAAa,MAGpB,MAAMM,EAAUvM,KAAKwL,OAASxL,KAAKoI,GAAKpI,KAAKyL,OAASzL,KAAKqI,GAC3CrI,KAAK0L,OAAS1L,KAAKoL,GAAKpL,KAAK2L,OAAS3L,KAAKqL,GAC3CrL,KAAK4L,OAAS5L,KAAKsL,GAAKtL,KAAK6L,UAAY7L,KAAKuL,KAW9D,OATAvL,KAAKwL,KAAOxL,KAAKoI,EACjBpI,KAAKyL,KAAOzL,KAAKqI,EACjBrI,KAAK0L,KAAO1L,KAAKoL,EAEjBpL,KAAK2L,KAAO3L,KAAKqL,EACjBrL,KAAK4L,KAAO5L,KAAKsL,EAEjBtL,KAAK6L,QAAU7L,KAAKuL,KAEbgB,CACR,CAED,KAAAC,GACOxM,KAAK8L,WAIV9L,KAAK8L,UAAW,EAChB9L,KAAKuL,KAAO,EACZvL,KAAK+L,WAAW5I,QACjB,CAED,OAAAsJ,GACEzM,KAAKmL,YAAa,CACnB,EC9IH,MAAMuB,EAAc,KAGL,MAAAC,EACb,WAAA9M,CAAY+M,GACV5M,KAAK4M,SAAWA,EAEhB5M,KAAKwG,aAAeoG,EAAStG,mBAAmBoG,QAEhD1M,KAAK6M,aAAe,IAAInI,aAAaoI,GAErC9M,KAAK+M,QAAU,GAEf,IAAK,IAAI/L,EAAI,EAAGA,EAAI0L,EAAa1L,IAC/BhB,KAAK+M,QAAQzL,KAAK,IAAI2J,EAAOjK,GAEhC,CAED,YAAAgM,CAAahM,EAAGiM,GACdjN,KAAK6M,aAAa,GAAKI,EAAO/B,OAAS+B,EAAO7E,EAAI,GAAoB,EACtEpI,KAAK6M,aAAa,GAAKI,EAAO/B,OAAS+B,EAAO5E,EAAI,GAAoB,EACtErI,KAAK6M,aAAa,GAAKI,EAAO/B,OAAS+B,EAAO7B,EAAI,EAClDpL,KAAK6M,aAAa,GAAKI,EAAO/B,OAAS+B,EAAO5B,EAAI,EAClDrL,KAAK6M,aAAa,GAAKI,EAAO/B,OAAS+B,EAAO3B,EAAI,EAClDtL,KAAK6M,aAAa,GAAKI,EAAO/B,OAAS+B,EAAO1B,KAAO,EAErDvL,KAAK4M,SAAS9F,aAAa9G,KAAKwG,aAzBhB,GAyB8BxF,EACnBhB,KAAK6M,aACjC,CAED,WAAAK,CAAY9E,EAAGC,EAAG+C,EAAGC,EAAGC,EAAGW,EAAa,KAAMC,EAAS,MACrD,IAAK,IAAIlL,EAAI,EAAGA,EAAI0L,EAAa1L,IAAK,CACpC,MAAMiM,EAASjN,KAAK+M,QAAQ/L,GAE5B,IAAKiM,EAAO/B,OAIV,OAHA+B,EAAOjB,MAAM5D,EAAGC,EAAG+C,EAAGC,EAAGC,EAAGW,EAAYC,GACxClM,KAAKgN,aAAahM,EAAGiM,GAEdA,CAEV,CACF,CAED,MAAA/J,GACE,IAAK,IAAIlC,EAAI,EAAGA,EAAI0L,EAAa1L,IAAK,CACpC,MAAMiM,EAASjN,KAAK+M,QAAQ/L,GAExBiM,EAAO/B,QACL+B,EAAO/J,UACTlD,KAAKgN,aAAahM,EAAGiM,EAG1B,CACF,CAED,IAAAvF,GACE1H,KAAK4M,SAASlF,KAAK1H,KAAK4M,SAAStI,aAActE,KAAKwG,aACjCkG,EACpB,CAED,KAAAvJ,GACE,IAAK,MAAM8J,KAAUjN,KAAK+M,QACxBE,EAAOR,UACPQ,EAAO/J,QAEV,ECnEH,MAAMiK,EAAgB,KAGP,MAAAC,EACb,WAAAvN,CAAY+M,GACV5M,KAAK4M,SAAWA,EAEhB5M,KAAKwG,aAAeoG,EAAStG,mBAAmB6G,OAGhDnN,KAAKqN,eAAiB,IAAI3I,aAAaoI,GACvC9M,KAAKsN,UAAY,EAEjBtN,KAAKuN,KAAO,CACb,CAED,YAAAC,CAAapF,EAAGC,EAAGoF,EAAGC,EAAGzL,EAAG0L,EAAIC,EAAIC,GAClC7N,KAAKqN,eAAe,GAAKjF,EACzBpI,KAAKqN,eAAe,GAAKhF,EACzBrI,KAAKqN,eAAe,GAAKI,EACzBzN,KAAKqN,eAAe,GAAKK,EACzB1N,KAAKqN,eAAe,GAAKpL,EACzBjC,KAAKqN,eAAe,GAAKM,EACzB3N,KAAKqN,eAAe,GAAKO,EACzB5N,KAAKqN,eAAe,GAAKrN,KAAKuN,KAC9BvN,KAAKqN,eAAe,GAAKQ,EAEzB7N,KAAK4M,SAAS9F,aAAa9G,KAAKwG,aA1BhB,GA0B8BxG,KAAKsN,UACxBtN,KAAKqN,gBAEhCrN,KAAKsN,WAAatN,KAAKsN,UAAY,GAAKH,CACzC,CAED,MAAAjK,GACElD,KAAKuN,YACN,CAED,IAAA7F,GACE1H,KAAK4M,SAASrI,eAAegJ,KAAOvN,KAAKuN,KAEzCvN,KAAK4M,SAASlF,KAAK1H,KAAK4M,SAASrI,eAAgBvE,KAAKwG,aACnC2G,EACpB,ECxCY,MAAAW,EACb,WAAAjO,CAAYkO,EAAWC,EAAOzH,EAAM0H,EAAOC,EAAYrL,GAQrD,GAPA7C,KAAK+N,UAAYA,EACjB/N,KAAKuG,KAAOA,EACZvG,KAAKgO,MAAQA,EAEbhO,KAAKmO,SAAU,EACfnO,KAAKoO,aAAc,EAEL,IAAVH,EAAyB,CAC3B,IAAK,MAAMI,KAAQrO,KAAKgO,MACtBK,EAAK9H,KAAO,EAGdvG,KAAKsO,SAAW,EAEhBtO,KAAKuO,MAAQ,IAAI3L,EAAM,IAAI,KACzB,GAAI5C,KAAKsO,UAAYtO,KAAKgO,MAAMzD,OAC9BvK,KAAKuO,MAAMtL,SAAU,MAChB,CACLjD,KAAKgO,MAAMhO,KAAKsO,UAAU/H,KAAOvG,KAAKuG,KAEtC,IAAK,MAAM8H,KAAQrO,KAAKgO,MACtBhO,KAAK+N,UAAUS,WAAWH,GAG5BrO,KAAKsO,UACN,KACA,EACT,MAAW,GAAc,IAAVL,EAAyB,CAClC,IAAK,MAAMI,KAAQrO,KAAKgO,MACtBK,EAAK9H,KAAO,EAGdvG,KAAKuO,MAAQ,IAAI3L,EAAM,KAAK,KAC1B5C,KAAKmO,SAAWnO,KAAKmO,OAAO,IAC3B,EACJ,CAEGnO,KAAKuO,OAASL,IAChBlO,KAAKuO,MAAMtL,SAAU,EAErBjD,KAAKyO,WAAa,IAAI7L,EAAMsL,GAAY,KACtClO,KAAKuO,MAAMtL,SAAU,EAEjBjD,KAAK0O,WACP1O,KAAK0O,SAASzL,SAAU,EACzB,KAIL,IAAK,MAAMoL,KAAQrO,KAAKgO,MACtBhO,KAAK+N,UAAUS,WAAWH,GAGxBxL,IACF7C,KAAK0O,SAAW,IAAI9L,EAAMC,GAAS,KACjC7C,KAAK2O,MAAM,IAGT3O,KAAKyO,aACPzO,KAAK0O,SAASzL,SAAU,GAG7B,CAED,MAAAC,GAaE,GAZIlD,KAAKyO,YACPzO,KAAKyO,WAAWvL,SAGdlD,KAAKuO,OACPvO,KAAKuO,MAAMrL,SAGTlD,KAAK0O,UACP1O,KAAK0O,SAASxL,SAGZlD,KAAKmO,UAAYnO,KAAKoO,YACxB,IAAK,MAAMC,KAAQrO,KAAKgO,MACtBK,EAAK9H,KAAOvG,KAAKuG,KAEjBvG,KAAK+N,UAAUS,WAAWH,QAEvB,IAAKrO,KAAKmO,SAAWnO,KAAKoO,YAC/B,IAAK,MAAMC,KAAQrO,KAAKgO,MACtBK,EAAK9H,KAAO,EAEZvG,KAAK+N,UAAUS,WAAWH,GAI9BrO,KAAKoO,YAAcpO,KAAKmO,OACzB,CAED,IAAAQ,GACE3O,KAAKmO,SAAU,EAEf,IAAK,MAAME,KAAQrO,KAAKgO,MACtBK,EAAK9H,KAAO,EAEZvG,KAAK+N,UAAUS,WAAWH,GAGxBrO,KAAKyO,aACPzO,KAAKyO,WAAWxL,SAAU,GAGxBjD,KAAKuO,QACPvO,KAAKuO,MAAMtL,SAAU,GAGnBjD,KAAK0O,WACP1O,KAAK0O,SAASzL,SAAU,EAE3B,ECjHY,MAAA2L,EACb,WAAA/O,CAAY+M,GACV5M,KAAK4M,SAAWA,EAEhB5M,KAAKwG,aAAeoG,EAAStG,mBAAmBuI,OAEhD7O,KAAK8O,WAAa,IAAIpK,aAAaoI,GACnC9M,KAAKsN,UAAY,EAEjBtN,KAAK+O,MAAQ,KACb/O,KAAKgP,KAAO,KAEZhP,KAAKiP,MAAQ,IACd,CAED,aAAIC,CAAUC,GACRnP,KAAK+O,OACP/O,KAAK+O,MAAMJ,OAGb3O,KAAK+O,MAAQI,CACd,CAED,YAAIC,CAASD,GACPnP,KAAKgP,MACPhP,KAAKgP,KAAKL,OAGZ3O,KAAKgP,KAAOG,CACb,CAED,aAAIE,CAAUF,GACRnP,KAAKiP,OACPjP,KAAKiP,MAAMN,OAGb3O,KAAKiP,MAAQE,CACd,CAED,UAAAX,CAAWH,GACTrO,KAAK8O,WAAW,GAAKT,EAAKjG,EAAIiG,EAAK9H,KAAO,EAC1CvG,KAAK8O,WAAW,GAAKT,EAAKhG,EAAIgG,EAAK9H,KAAO,EAC1CvG,KAAK8O,WAAW,GAAKT,EAAKhD,EAC1BrL,KAAK8O,WAAW,GAAKT,EAAK/C,EAC1BtL,KAAK8O,WAAW,GAAKT,EAAK9H,KAE1BvG,KAAK4M,SAAS9F,aAAa9G,KAAKwG,aAhDhB,GAgD8B6H,EAAKtH,MACxB/G,KAAK8O,WACjC,CAED,KAAAQ,CAAMjB,GACJ,MAAMkB,EAAWlB,EAAKmB,WAAW,GAEjC,IAAInE,EAAI,KACJC,EAAI,KAkBR,OAhBIiE,GAAY,IAAIC,WAAW,IAAMD,GAAY,IAAIC,WAAW,IAC9DnE,EACI,GADCgD,EAAKmB,WAAW,GAAK,IAAIA,WAAW,IACzB,IAChBlE,EAAI,KACKiE,GAAY,IAAIC,WAAW,IAAMD,GAAY,IAAIC,WAAW,IACrEnE,EACI,GADCgD,EAAKmB,WAAW,GAAK,IAAIA,WAAW,IACzB,IAChBlE,EAAI,MACc,MAAT+C,GACThD,EAAI,KACJC,EAAI,MACc,MAAT+C,IACThD,EAAI,MACJC,EAAI,MAGC,CAACD,EAAGC,EACZ,CAED,aAAAmE,CAAcrH,EAAGC,EAAGqH,EAAQnJ,EAAM0H,EAAOC,EAAYrL,GACnD,IAAImL,EAAQ,GAER2B,EAAKvH,EAET,IAAK,MAAMiG,KAAQqB,EACjB,GAAa,OAATrB,EACFhG,GAAK9B,EAAO,GACZoJ,EAAKvH,MACA,CACL,MAAOiD,EAAGC,GAAKtL,KAAKsP,MAAMjB,GAE1B,GAAU,OAANhD,GAAoB,OAANC,EAAY,CAC5B,MAAMvE,EAAQ/G,KAAKsN,UACnBtN,KAAKsN,WAAatN,KAAKsN,UAAY,GA5F3B,IA8FRU,EAAM1M,KAAK,CAAEyF,MAAOA,EAAOqB,EAAGuH,EAAItH,EAAGA,EAAGgD,EAAGA,EAAGC,EAAGA,EAAG/E,KAAMA,GAC3D,CAEDoJ,GAAMpJ,CACP,CAGH,OAAO,IAAIuH,EAAY9N,KAAMgO,EAAOzH,EAAM0H,EAAOC,EAAYrL,EAC9D,CAED,qBAAA+M,CAAsBvH,EAAGqH,EAAQnJ,EAAM0H,EAAOC,EAAYrL,GACxD,IAAIgN,EAAW,EAEf,IAAK,MAAMC,KAAQJ,EAAOK,MAAM,MAAO,CACrC,MAAMtM,EAAQqM,EAAKvF,OAAShE,EAExB9C,EAAQoM,IACVA,EAAWpM,EAEd,CAED,MAAM2E,EAAI,IAAmByH,EAAW,EAExC,OAAO7P,KAAKyP,cAAcrH,EAAGC,EAAGqH,EAAQnJ,EAAM0H,EAAOC,EAAYrL,EAClE,CAED,MAAAK,GACMlD,KAAK+O,OACP/O,KAAK+O,MAAM7L,SAGTlD,KAAKgP,MACPhP,KAAKgP,KAAK9L,SAGRlD,KAAKiP,OACPjP,KAAKiP,MAAM/L,QAEd,CAED,IAAAwE,GACE1H,KAAK4M,SAASlF,KAAK1H,KAAK4M,SAASpI,WAAYxE,KAAKwG,aAvIpC,IAwIf,EC1IY,MAAAwJ,EACb,WAAAnQ,GACEG,KAAKiQ,QAAU,IAAIC,YACpB,CAED,KAAAC,CAAMhB,GACJ,MAAMiB,EAAY,IAAIC,yBAAyBlB,GAC/CiB,EAAUE,KAAO,IACjBF,EAAUG,MAAQ,GAElBC,gBAAgBL,MAAMC,EACvB,CAED,IAAAK,CAAKpR,EAAMqR,EAAgBC,EAAgBC,GACzC,MAAMC,EAAa7Q,KAAKiQ,QAAQa,mBAC1BC,EAAO/Q,KAAKiQ,QAAQe,aAE1BH,EAAWxR,KAAOA,EAClBwR,EAAWI,UAAUC,eACnBR,EAAgB1Q,KAAKiQ,QAAQkB,aAE/BN,EAAWI,UAAUG,6BACnBT,EAAgB3Q,KAAKiQ,QAAQkB,YAAcP,GAG7CG,EAAKA,KAAKG,eAAe,GAAKlR,KAAKiQ,QAAQkB,aAC3CJ,EAAKA,KAAKK,6BACR,IAAMpR,KAAKiQ,QAAQkB,YAAcP,GAGnCC,EAAWQ,QAAQN,GACnBA,EAAKM,QAAQrR,KAAKiQ,QAAQqB,aAE1BT,EAAWU,QACXV,EAAWW,KAAKxR,KAAKiQ,QAAQkB,YAAcP,EAC5C,ECnCY,MAAAa,EACb,WAAA5R,CAAY6R,GACV1R,KAAK0R,IAAMA,EAEX1R,KAAK2N,GAAK,EACV3N,KAAK4N,GAAK,EAEV5N,KAAK2R,GAAK,EACV3R,KAAK4R,GAAK,EAEV5R,KAAK6R,QAAU,EACf7R,KAAK8R,QAAU,EACf9R,KAAK+R,QAAU,GACf/R,KAAKgS,QAAU,GAEfhS,KAAKiS,MAAQ,GAEbjS,KAAKkS,kBAAmB,CACzB,CAED,IAAA/F,CAAKc,GACHjN,KAAKiN,OAASA,CACf,CAED,KAAI7E,GACF,OAAOpI,KAAKiN,OAAO7E,CACpB,CAED,KAAIC,GACF,OAAOrI,KAAKiN,OAAO5E,CACpB,CAED,KAAID,CAAEA,GACJpI,KAAKiN,OAAO7E,EAAIA,CACjB,CAED,KAAIC,CAAEA,GACJrI,KAAKiN,OAAO5E,EAAIA,CACjB,CAED,QAAI8J,GACF,OAAOnS,KAAKoI,EAAIpI,KAAK6R,OACtB,CAED,SAAIO,GACF,OAAOpS,KAAKoI,EAAIpI,KAAK6R,QAAU7R,KAAK+R,QAAU,CAC/C,CAED,OAAIM,GACF,OAAOrS,KAAKqI,EAAIrI,KAAK8R,OACtB,CAED,UAAIQ,GACF,OAAOtS,KAAKqI,EAAIrI,KAAK8R,QAAU9R,KAAKgS,QAAU,CAC/C,CAED,MAAA9O,GACElD,KAAK2N,IAAM3N,KAAK2R,IAAK,IAAA,IACrB3R,KAAK4N,IAAM5N,KAAK4R,IAAK,IAAA,IAEjB5R,KAAK2N,GAAK3N,KAAKiS,MACjBjS,KAAK2N,GAAK3N,KAAKiS,MACNjS,KAAK2N,IAAM3N,KAAKiS,QACzBjS,KAAK2N,IAAM3N,KAAKiS,OAGdjS,KAAK4N,GAAK,EACZ5N,KAAK4N,GAAK,EACD5N,KAAK4N,IAAM,IACpB5N,KAAK4N,IAAM,GAGb5N,KAAKoI,GAAKpI,KAAK2N,IAAK,IAAA,KAEf3N,KAAKkS,kBAAoBlS,KAAKuS,WAC7BvS,KAAK2N,GAAK,EACZ3N,KAAKoI,GAAKpI,KAAK0R,IAAIc,eAAexS,KAAKmS,MAEvCnS,KAAKoI,GAAKpI,KAAK0R,IAAIe,eAAezS,KAAKoS,OAAS,GAIpDpS,KAAKqI,GAAKrI,KAAK4N,IAAK,IAAA,KAEf5N,KAAKkS,kBAAoBlS,KAAKuS,WAC7BvS,KAAK4N,GAAK,EACZ5N,KAAKqI,GAAKrI,KAAK0R,IAAIc,eAAexS,KAAKqS,KAEvCrS,KAAKqI,GAAKrI,KAAK0R,IAAIe,eAAezS,KAAKsS,QAAU,EAGtD,CAED,MAAAC,CAAOG,EAAU,EAAGC,EAAU,GAC5B,OAAO3S,KAAK0R,IAAIa,OAAOvS,KAAKmS,KAAOO,EAAS1S,KAAKqS,IAAMM,IAChD3S,KAAK0R,IAAIa,OAAOvS,KAAKmS,KAAOO,EAAS1S,KAAKsS,OAASK,IACnD3S,KAAK0R,IAAIa,OAAOvS,KAAKoS,MAAQM,EAAS1S,KAAKqS,IAAMM,IACjD3S,KAAK0R,IAAIa,OAAOvS,KAAKoS,MAAQM,EAAS1S,KAAKsS,OAASK,EAC5D,CAED,QAAAC,GACE,OAAO,CACR,ECpGY,MAAKC,UAASpB,EAC3B,WAAA5R,CAAY6R,EAAKoB,EAAWC,EAAaC,GACvCvJ,MAAMiI,GAEN1R,KAAK+S,YAAcA,EACnB/S,KAAKgT,eAAiBA,EAEtBhT,KAAK6R,QAAU,GACf7R,KAAK8R,QAAU,GACf9R,KAAK+R,QAAU,GACf/R,KAAKgS,QAAU,GAEfhS,KAAK2N,GAAmB,IAAdmF,EAAsB,KAAQ,IAExC9S,KAAKiS,MAAQ,EAEbjS,KAAKkS,kBAAmB,CACzB,CAED,MAAAhP,GAGE,GAFAuG,MAAMvG,SAEFlD,KAAKuS,SAGP,OAFAvS,KAAKiN,OAAOR,eACZzM,KAAKiT,UAIP,IAAK,MAAMhG,KAAUjN,KAAK+S,YAAYhG,QACpC,GAAIE,EAAOhB,cACHgB,EAAOhB,WAAWkG,KAAOnS,KAAKoS,OAC9BnF,EAAOhB,WAAWmG,MAAQpS,KAAKmS,MAC/BlF,EAAOhB,WAAWoG,IAAMrS,KAAKsS,QAC7BrF,EAAOhB,WAAWqG,OAAStS,KAAKqS,MAChCpF,EAAOhB,WAAW2G,WAGpB,OAFA5S,KAAKiN,OAAOR,eACZzM,KAAKiT,UAOb,MAAM7K,EAAIpI,KAAK2N,GAAK,EAAI3N,KAAKmS,KAAOnS,KAAKoS,MAEnC/S,EAAOkI,KAAKC,SAAW,GAEvBiG,EAAIpO,EAAO,EAAM,IACjBqO,EAAIrO,EAAO,EAAM,EACjB4C,EAAI5C,EAAO,IAAO,IAEpBkI,KAAKC,SAAW,IAClBxH,KAAKgT,eAAexF,aAClBpF,EAAGpI,KAAKqS,IAAMrS,KAAKgS,QAAU,GAAOzK,KAAKC,SAAW,IAAOxH,KAAKgS,QAChEvE,EAAGC,EAAGzL,EACN,EAAK,EACL,IAGL,CAED,OAAAgR,GACE,IAAK,IAAIjS,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAM3B,EAAOkI,KAAKC,SAAW,GAEvBiG,EAAIpO,EAAO,EAAM,IACjBqO,EAAIrO,EAAO,EAAM,EACjB4C,EAAI5C,EAAO,IAAO,IAExBW,KAAKgT,eAAexF,aAClBxN,KAAKmS,KAAO5K,KAAKC,SAAWxH,KAAK+R,QACjC/R,KAAKqS,IAAM9K,KAAKC,SAAWxH,KAAKgS,QAChCvE,EAAGC,EAAGzL,EACkB,KAAvBsF,KAAKC,SAAW,IAAqC,KAAvBD,KAAKC,SAAW,IAC/C,IAEH,CACF,EC3EY,MAAK0L,UAASzB,EAC3B,WAAA5R,CAAYwD,EAAMuJ,EAAU8E,EAAKqB,EAAaI,EAAOH,EACzCjF,EAAWqF,GACrB3J,MAAMiI,GAEN1R,KAAKqD,KAAOA,EACZrD,KAAK4M,SAAWA,EAChB5M,KAAK+S,YAAcA,EACnB/S,KAAKmT,MAAQA,EACbnT,KAAKgT,eAAiBA,EACtBhT,KAAK+N,UAAYA,EACjB/N,KAAKoT,MAAQA,EAEbpT,KAAKqT,UAAY,CACfC,YAAY,EACZC,WAAW,EACXC,YAAY,EACZC,eAAe,EACfC,WAAW,GAGb1T,KAAK0F,QAAS,EAEd1F,KAAK8S,UAAY,EACjB9S,KAAK2T,cAAgB,EAErB3T,KAAK4T,OAAS,EAEd5T,KAAKiP,MAAQ,EACbjP,KAAK6T,YAAa,EAElB7T,KAAK8T,mBAAqB,IAAIlR,EAAM,KAAM,KACxC5C,KAAK6T,YAAa,CAAK,IAGzB7T,KAAK8T,mBAAmB7Q,SAAU,EAElCjD,KAAK+T,MAAQ,EAEb/T,KAAKgU,cAAgB,IAAIpR,EAAM,KAAK,KAClC5C,KAAKoT,MAAM3C,KAAK,WAAY,IAAK,IAAK,IAAK,IAC1C,GAEHzQ,KAAKiU,cAAgB,IAAIrR,EAAM,IAAI,KACjC5C,KAAKoT,MAAM3C,KAAK,WAAY,IAAK,IAAK,IAAK,IAC1C,EACJ,CAED,IAAAtE,CAAKc,GACHxD,MAAM0C,KAAKc,GAEXjN,KAAK4M,SAAShI,QAAU5E,KAAKoI,EAAI,GAAoB,IACrDpI,KAAK4M,SAAS/H,QAAU7E,KAAKqI,EAAI,GAAoB,IAErDrI,KAAKkU,aAAelU,KAAKqI,CAC1B,CAED,MAAAnF,GACOlD,KAAK0F,SACR1F,KAAKmU,cAELnU,KAAK0F,QAAS,GAGhB,MAAM0O,EAAWpU,KAAKuS,QAAQ,EAAK,GAC7B8B,EAAYrU,KAAKuS,OAAO,EAAK,GAC7B+B,EAAYtU,KAAKuS,OAAO,GAAM,GAC9BgC,EAAYvU,KAAKuS,OAAO,EAAK,GAEnC,IAAIiC,GAAW,EAsGf,GApGID,GACFvU,KAAK4R,GAAK,EACV5R,KAAK4N,GAAK,EAEN5N,KAAKqI,EAAIrI,KAAKkU,aAAe,MAC/BlU,KAAK4M,SAASvF,QAEdrH,KAAKoT,MAAM3C,KAAK,WAAY,GAAI,IAAK,KAGvCzQ,KAAKkU,aAAelU,KAAKqI,EACzBrI,KAAK+T,MAAQ,GACJO,GAActU,KAAK4N,GAAK,IAAM5N,KAAKmT,MAAM7K,QAAQ,KAC1DtI,KAAK4R,GAAK,KACV5R,KAAK4N,GAAK,GAEV5N,KAAK4R,GAAK,KAGR5R,KAAKmT,MAAM/K,EAAI,GAAOpI,KAAKqT,UAAUC,YACnCtT,KAAK2R,GAAK,IACZ3R,KAAK2R,GAAK,GAGPyC,GAGHpU,KAAK2N,GAAK,EACV3N,KAAK2R,GAAK,EAEN3R,KAAKqT,UAAUG,YAAcxT,KAAKmT,MAAM7K,QAAQ,KAChD8L,EAASK,QACXzU,KAAK4M,SAASvF,MAAM,GACpBrH,KAAKyU,MAAM,GACXL,EAASK,QACTD,GAAW,IAVbxU,KAAK2R,IAAM,KAAQ3R,KAAKmT,MAAM/K,EAchCpI,KAAK8S,WAAa,EAClB9S,KAAK2T,cAAgB,EAErB3T,KAAK4T,OAAS,GACL5T,KAAKmT,MAAM/K,EAAI,GAAOpI,KAAKqT,UAAUC,YAC1CtT,KAAK2R,GAAK,IACZ3R,KAAK2R,GAAK,GAGP0C,GAGHrU,KAAK2N,GAAK,EACV3N,KAAK2R,GAAK,EAEN3R,KAAKqT,UAAUG,YAAcxT,KAAKmT,MAAM7K,QAAQ,KAChD+L,EAAUI,QACZzU,KAAK4M,SAASvF,MAAM,GACpBrH,KAAKyU,MAAM,GACXJ,EAAUI,QACVD,GAAW,IAVbxU,KAAK2R,IAAM,KAAQ3R,KAAKmT,MAAM/K,EAchCpI,KAAK8S,UAAY,EACjB9S,KAAK2T,cAAgB,EAErB3T,KAAK4T,OAAS,IAES,IAAnB5T,KAAK8S,YACP9S,KAAK2R,IAAM3R,KAAK2R,GAEhB3R,KAAK2T,cAAgB3T,KAAK8S,UAC1B9S,KAAK8S,UAAY,IAGd9S,KAAK2T,cAAgB,GAAO3T,KAAK2N,GAAK,MACtC3N,KAAK2T,cAAgB,GAAO3T,KAAK2N,GAAK,MACvCyG,GAAYC,KACdrU,KAAK2N,GAAK,EACV3N,KAAK2R,GAAK,GAGR3R,KAAKqT,UAAUG,YAAcxT,KAAKmT,MAAM9K,EAAI,GAC5CrI,KAAKmT,MAAM7K,QAAQ,KAAagM,GAAaA,EAAUG,OACzDzU,KAAK4M,SAASvF,MAAM,GACpBrH,KAAKyU,MAAM,GACXH,EAAUG,QACVD,GAAW,GACFxU,KAAKqT,UAAUG,YAAcxT,KAAKmT,MAAM9K,EAAI,GAC5CrI,KAAKmT,MAAM7K,QAAQ,KAAaiM,GAAaA,EAAUE,QAChEzU,KAAK4M,SAASvF,MAAM,GACpBrH,KAAKyU,MAAM,GACXF,EAAUE,QACVD,GAAW,IAIfxU,KAAKiU,cAAchR,QAAUuR,EAC7BxU,KAAKiU,cAAc/Q,SAEflD,KAAKqT,UAAUI,eAAiBzT,KAAKmT,MAAM3K,YAAY,MACtDgM,EAAU,CACb,MAAM9B,EAA0B,IAAhB1S,KAAK4T,OAAmB,GAAK,GAE7C5T,KAAK+S,YAAY7F,YACflN,KAAKoI,EAAIpI,KAAK+R,QAAU,EAAIW,EAAS1S,KAAKqI,EAAG,GAAc,EAAK,EAChE,IAAIwK,EAAM7S,KAAK0R,IAAK1R,KAAK4T,OAAQ5T,KAAK+S,YAAa/S,KAAKgT,iBAG1DhT,KAAKoT,MAAM3C,KAAK,SAAU,IAAK,IAAK,GACrC,CAEGzQ,KAAK2R,GAAK,KACZ3R,KAAK2R,GAAK,KACD3R,KAAK2R,IAAM,OACpB3R,KAAK2R,IAAM,MAGT3R,KAAKmT,MAAM3K,YAAY,KAAaxI,KAAKqT,UAAUE,YACtC,IAAZvT,KAAK4R,IACL5R,KAAKqT,UAAUK,WAAa1T,KAAK+T,MAAQ,KAC5C/T,KAAK4N,IAAM,GACX5N,KAAK+T,QACL/T,KAAKoT,MAAM3C,KAAK,WAAY,IAAK,IAAK,KAGxCzQ,KAAKgU,cAAc/Q,QAA6B,IAAnBjD,KAAK8S,YAAsB0B,EACxDxU,KAAKgU,cAAc9Q,SAEnBuG,MAAMvG,SAEFlD,KAAK2N,IAAM,GACb3N,KAAK0U,WAAW1U,KAAKoI,EAAI,GAAc,EAAGmM,GACjCvU,KAAK2N,GAAK,IACnB3N,KAAK0U,WAAW1U,KAAKoI,EAAI,EAAGmM,GAG9BvU,KAAKiN,OAAOX,WAAWzJ,QAAU0R,EAAY,IAAM,GACnDvU,KAAKiN,OAAOX,WAAWrJ,QAA6B,IAAnBjD,KAAK8S,UACtC9S,KAAKiN,OAAOZ,eAAiB9E,KAAKoN,KAAK3U,KAAK8S,WAE5C9S,KAAK4M,SAAShI,QAAU5E,KAAKoI,EAAI,GAAoB,IACrDpI,KAAK4M,SAAS/H,QAAU7E,KAAKqI,EAAI,GAAoB,IAErDrI,KAAK8T,mBAAmB5Q,QACzB,CAED,WAAAiR,GACE,IAAIhF,EAAO,GAEX,IAAK,IAAInO,EAAI,EAAGA,EAAIuG,KAAKqN,IAAI,EAAG5U,KAAKiP,OAAQjO,IAC3CmO,GAAQnP,KAAKiP,MAAQjO,EAAI,IAAM,IAGjChB,KAAK+N,UAAUsB,UAAYrP,KAAK+N,UAAU0B,cAAc,GAAI,GAAIN,EAAM,GACvE,CAED,MAAA0F,GACE,IAAI7U,KAAK6T,aAIT7T,KAAK6T,YAAa,EAClB7T,KAAK8T,mBAAmB3Q,QAExBnD,KAAKiP,QACLjP,KAAKmU,cAELnU,KAAKiN,OAAOT,QAEZxM,KAAKoT,MAAM3C,KAAK,WAAY,IAAK,IAAK,IAEnB,IAAfzQ,KAAKiP,OACPjP,KAAKoT,MAAMjD,MAAM,6BAGnBnQ,KAAK4M,SAASvF,QAEK,IAAfrH,KAAKiP,OAAa,CACpBjP,KAAKiN,OAAOR,UAEZ,IAAK,IAAIzL,EAAI,EAAGA,EAAI,IAAKA,IACvBhB,KAAKgT,eAAexF,aAClBxN,KAAKmS,KAAO5K,KAAKC,SAAWxH,KAAK+R,QACjC/R,KAAKqS,IAAM9K,KAAKC,SAAWxH,KAAKgS,QAChC,IAAM,IAAM,IACY,KAAvBzK,KAAKC,SAAW,IAAqC,KAAvBD,KAAKC,SAAW,IAC/C,KAIJxH,KAAKqD,KAAKyR,MACX,CACF,CAED,KAAAL,CAAM3B,GACJ,MAAMlL,EAAwB,GAAhBL,KAAKC,SAEnB,IAAIY,EAAI,EACJC,EAAI,EAER,OAAQyK,GACR,KAAK,EACH1K,EAAIpI,KAAKoI,EAAI,GACbC,EAAIrI,KAAKqI,EACT,MACF,KAAK,EACHD,EAAIpI,KAAKoI,EAAI,GACbC,EAAIrI,KAAKqI,EAAI,GACb,MACF,KAAK,EACHD,EAAIpI,KAAKoI,EACTC,EAAIrI,KAAKqI,EAAI,GACb,MACF,KAAK,EACHD,EAAIpI,KAAKoI,EAAI,GACbC,EAAIrI,KAAKqI,EAAI,GAIf,IAAK,IAAIrH,EAAI,EAAGA,EAAI4G,EAAO5G,IAAK,CAC9B,IAAI2M,EAAK,EACLC,EAAK,EAET,OAAQkF,GACR,KAAK,EACHnF,EAAqB,GAAhBpG,KAAKC,SAAiB,IAC3BoG,EAAqB,IAAhBrG,KAAKC,SACV,MACF,KAAK,EACHmG,EAAqB,GAAhBpG,KAAKC,SAAiB,IAC3BoG,EAAsB,KAAhBrG,KAAKC,SACX,MACF,KAAK,EACHmG,EAAqB,IAAhBpG,KAAKC,SACVoG,EAAqB,GAAhBrG,KAAKC,SAAiB,IAC3B,MACF,KAAK,EACHmG,EAAsB,KAAhBpG,KAAKC,SACXoG,EAAqB,GAAhBrG,KAAKC,SAAiB,IAI7B,MAAMnI,EAAOkI,KAAKC,SAAW,IAEvBiG,EAAIpO,EAAO,EAAM,IACjBqO,EAAIrO,EAAO,IAAO,IAClB4C,EAAI,IAEVjC,KAAKgT,eAAexF,aAAapF,EAAGC,EAAGoF,EAAGC,EAAGzL,EAAG0L,EAAIC,EAAI,IACzD,CACF,CAED,UAAA8G,CAAWtM,EAAG2M,GACZ,IAAKA,EACH,OAGF,MAAMnN,EAAwB,EAAhBL,KAAKC,SAEbiG,EAAgB,KAAZsH,EAAkB,EAAM,GAC5BrH,EAAgB,KAAZqH,EAAkB,GAAM,IAC5B9S,EAAgB,KAAZ8S,EAAkB,IAAO,EAE7BjC,EAAY1K,EAAIpI,KAAKoI,EAAI,IAAmB,EAAI,EAEtD,IAAK,IAAIpH,EAAI,EAAGA,EAAI4G,EAAO5G,IACzBhB,KAAKgT,eAAexF,aAClBpF,EAAGpI,KAAKqI,EAAI,GAAc,EAC1BoF,EAAGC,EAAGzL,EACN6Q,EAAYvL,KAAKC,SAAW,IAAuB,KAAhBD,KAAKC,SACxC,IAGL,EC3VY,MAAKwN,UAASvD,EAC3B,WAAA5R,CAAY+M,EAAU8E,EAAKsB,GACzBvJ,MAAMiI,GAEN1R,KAAK4M,SAAWA,EAChB5M,KAAKgT,eAAiBA,EAEtBhT,KAAKkS,kBAAmB,EAExBlS,KAAKiV,UAAY,EAClB,CAED,KAAAR,GAKE,GAJAzU,KAAKiV,YAELjV,KAAKiN,OAAOT,QAERxM,KAAKiV,WAAa,EAAG,CACvB,IAAK,IAAIjU,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,MAAM3B,EAAOkI,KAAKC,SAAW,IAEvBiG,EAAIpO,EAAO,EAAM,IACjBqO,EAAIrO,EAAO,IAAO,IAClB4C,EAAI,IAEVjC,KAAKgT,eAAexF,aAClBxN,KAAKmS,KAAO5K,KAAKC,SAAWxH,KAAK+R,QACjC/R,KAAKqS,IAAM9K,KAAKC,SAAWxH,KAAKgS,QAChCvE,EAAGC,EAAGzL,EACkB,KAAvBsF,KAAKC,SAAW,IAAqC,KAAvBD,KAAKC,SAAW,IAC/C,IAEH,CAEDxH,KAAK4M,SAASvF,MAAM,IAEpBrH,KAAKiN,OAAOR,UACZzM,KAAK0R,IAAIwD,UAAUlV,KAAKoI,EAAGpI,KAAKqI,EAAG,KACpC,CACF,ECtCY,MAAK8M,UAAS1D,EAC3B,WAAA5R,CAAY+M,EAAU8E,EAAK0D,EAAKpC,EAAgBI,GAC9C3J,MAAMiI,GAEN1R,KAAK4M,SAAWA,EAChB5M,KAAKoV,IAAMA,EACXpV,KAAKgT,eAAiBA,EACtBhT,KAAKoT,MAAQA,EAEbpT,KAAK6R,QAAU,EACf7R,KAAK8R,QAAU,EACf9R,KAAK+R,QAAU,GACf/R,KAAKgS,QAAU,GAEfhS,KAAKqV,SAAU,EAEfrV,KAAK0S,QAAU,EACf1S,KAAK2S,QAAU,EAEf3S,KAAKuO,MAAQ,IAAI3L,EAAM,KAAK,KAC1B5C,KAAKoI,EAAIpI,KAAKsV,MACdtV,KAAKqI,EAAIrI,KAAKuV,MAEdvV,KAAKqV,SAAU,EAEfrV,KAAKoT,MAAM3C,KAAK,SAAU,IAAK,IAAK,GAAI,IAG1CzQ,KAAKuO,MAAMtL,SAAU,EAErBjD,KAAKwV,MAAO,CACb,CAED,IAAArJ,CAAKc,GACHxD,MAAM0C,KAAKc,GAEXjN,KAAKsV,MAAQtV,KAAKoI,EAClBpI,KAAKuV,MAAQvV,KAAKqI,CACnB,CAED,MAAAnF,GACE,IAAKlD,KAAKwV,KAAM,CAUd,GATAxV,KAAKuO,MAAMrL,SAELlD,KAAKoV,IAAIjD,KAAO,GAAOnS,KAAKoS,OAC5BpS,KAAKoV,IAAIhD,MAAQ,GAAOpS,KAAKmS,MAC7BnS,KAAKoV,IAAI9C,OAAStS,KAAKqS,KACvBrS,KAAKoV,IAAI/C,IAAM,IAAQrS,KAAKsS,QAAYtS,KAAKqV,UACjDrV,KAAKuO,MAAMtL,SAAU,GAGnBjD,KAAKuO,MAAMtL,QAAS,CACtB,MAAMyP,EAA0B,EAAhBnL,KAAKC,SAAiB,EAChCmL,EAA0B,EAAhBpL,KAAKC,SAAiB,EAEtCxH,KAAKoI,EAAIpI,KAAKsV,MAAQ5C,EACtB1S,KAAKqI,EAAIrI,KAAKuV,MAAQ5C,CACvB,CAED,GAAI3S,KAAKqV,QACP,GAAIrV,KAAKuS,OAAO,EAAK,GAAM,CACzBvS,KAAK4R,GAAK,EACV5R,KAAK4N,GAAK,EAEV5N,KAAKqV,SAAU,EACfrV,KAAKwV,MAAO,EAEZxV,KAAK4M,SAASvF,QAEd,IAAK,IAAIrG,EAAI,EAAGA,EAAI,GAAIA,IACtBhB,KAAKgT,eAAexF,aAClBxN,KAAKmS,KAAO5K,KAAKC,SAAWxH,KAAK+R,QACjC/R,KAAKqS,IAAM9K,KAAKC,SAAWxH,KAAKgS,QAChC,IAAM,IAAM,IACY,KAAvBzK,KAAKC,SAAW,IAA8B,MAAhBD,KAAKC,SACpC,IAGd,MACUxH,KAAK4R,GAAK,KAEJ5R,KAAKoV,IAAIjD,KAAOnS,KAAKoS,OAASpS,KAAKoV,IAAIhD,MAAQpS,KAAKmS,MACxDnS,KAAKoV,IAAI/C,IAAMrS,KAAKsS,QAAUtS,KAAKoV,IAAI9C,OAAStS,KAAKqS,KACrDrS,KAAKoV,IAAIP,QAIhB,CAEDpL,MAAMvG,QACP,EC3FY,MAAKuS,UAAShE,EAC3B,WAAA5R,CAAY+M,EAAU8E,EAAK0D,EAAKpC,EAAgB0C,GAC9CjM,MAAMiI,GAEN1R,KAAK4M,SAAWA,EAChB5M,KAAKoV,IAAMA,EACXpV,KAAKgT,eAAiBA,EACtBhT,KAAK0V,OAASA,EAEd1V,KAAK6R,QAAU,EACf7R,KAAK8R,QAAU,EACf9R,KAAK+R,QAAU,GACf/R,KAAKgS,QAAU,GAEfhS,KAAK8S,UAAY,EACjB9S,KAAK2V,UAAY,CAClB,CAED,MAAAzS,GACE,OAAQlD,KAAK8S,WACb,KAAK,EACoB,IAAnB9S,KAAK2V,WAAoB3V,KAAKuS,OAAO,EAAK,IAK5CvS,KAAK2N,GAAK,EACV3N,KAAK4N,IAAM,KALX5N,KAAK8S,UAAY,EACjB9S,KAAK2V,UAAY,GACjB3V,KAAKqI,EAAId,KAAKqO,MAAM5V,KAAKqI,IAK3B,MACF,KAAK,EACoB,IAAnBrI,KAAK2V,WAAoB3V,KAAKuS,QAAQ,EAAK,IAK7CvS,KAAK2N,GAAK,EACV3N,KAAK4N,GAAK,KALV5N,KAAK8S,UAAY,EACjB9S,KAAK2V,UAAY,GACjB3V,KAAKqI,EAAId,KAAKqO,MAAM5V,KAAKqI,IAK3B,MACF,KAAK,EACoB,IAAnBrI,KAAK2V,WAAoB3V,KAAKuS,OAAO,GAAM,IAK7CvS,KAAK2N,IAAM,GACX3N,KAAK4N,GAAK,IALV5N,KAAK8S,UAAY,EACjB9S,KAAK2V,UAAY,GACjB3V,KAAKoI,EAAIb,KAAKqO,MAAM5V,KAAKoI,IAK3B,MACF,KAAK,EACoB,IAAnBpI,KAAK2V,WAAoB3V,KAAKuS,OAAO,EAAK,IAK5CvS,KAAK2N,GAAK,GACV3N,KAAK4N,GAAK,IALV5N,KAAK8S,UAAY,EACjB9S,KAAK2V,UAAY,GACjB3V,KAAKoI,EAAIb,KAAKqO,MAAM5V,KAAKoI,IAQ7BpI,KAAK2V,YAED3V,KAAK2V,UAAY,IACnB3V,KAAK2V,UAAY,GAGnBlM,MAAMvG,SAEAlD,KAAKoV,IAAIjD,KAAOnS,KAAKoS,OAASpS,KAAKoV,IAAIhD,MAAQpS,KAAKmS,MACxDnS,KAAKoV,IAAI/C,IAAMrS,KAAKsS,QAAUtS,KAAKoV,IAAI9C,OAAStS,KAAKqS,KACrDrS,KAAKoV,IAAIP,QAEZ,CAED,QAAAjC,GACE,OAAO5S,KAAK0V,OAAO9C,UACpB,CAED,OAAAK,GACEjT,KAAKiN,OAAOR,UAEZ,IAAK,IAAIzL,EAAI,EAAGA,EAAI,GAAIA,IACtBhB,KAAKgT,eAAexF,aAClBxN,KAAKmS,KAAO5K,KAAKC,SAAWxH,KAAK+R,QACjC/R,KAAKqS,IAAM9K,KAAKC,SAAWxH,KAAKgS,QAChC,EAAK,GAAK,IACc,KAAvBzK,KAAKC,SAAW,IAAqC,KAAvBD,KAAKC,SAAW,IAC/C,IAGL,EC5FY,MAAKqO,UAASJ,EAC3B,WAAA5V,CAAY+M,EAAU8E,EAAKqB,EAAaqC,EAAKpC,EAAgBI,GAC3D3J,MAAMmD,EAAU8E,EAAK0D,EAAKpC,GAE1BhT,KAAK+S,YAAcA,EACnB/S,KAAKoT,MAAQA,EAEbpT,KAAK8V,OAAS,CACf,CAED,IAAA3J,CAAKc,GACHxD,MAAM0C,KAAKc,GAEXjN,KAAK+V,OAAS,IAAIN,EAAYzV,KAAK4M,SAAU5M,KAAK0R,IAAK1R,KAAKoV,IAC9BpV,KAAKgT,eAAgBhT,MAEnDA,KAAKgW,KAAO,IAAIP,EAAYzV,KAAK4M,SAAU5M,KAAK0R,IAAK1R,KAAKoV,IAC9BpV,KAAKgT,eAAgBhT,MAEjDA,KAAK+S,YAAY7F,YACflN,KAAKiN,OAAO7E,EAAI,GAAIpI,KAAKiN,OAAO5E,EAAG,GAAO,EAAK,EAAKrI,KAAK+V,QAG3D/V,KAAK+S,YAAY7F,YACflN,KAAKiN,OAAO7E,EAAI,GAAIpI,KAAKiN,OAAO5E,EAAG,GAAO,EAAK,EAAKrI,KAAKgW,KAE5D,CAED,QAAApD,GAeE,OAdA5S,KAAK8V,SAEL9V,KAAKiN,OAAOT,QACZxM,KAAK+V,OAAO9I,OAAOT,QACnBxM,KAAKgW,KAAK/I,OAAOT,QAEbxM,KAAK8V,QAAU,IACjB9V,KAAKiT,UACLjT,KAAK+V,OAAO9C,UACZjT,KAAKgW,KAAK/C,UAEVjT,KAAKoT,MAAM3C,KAAK,SAAU,IAAK,IAAK,MAG/B,CACR,EC5CY,MAAKwF,UAASxE,EAC3B,WAAA5R,CAAY+M,EAAU8E,EAAK0D,EAAKpC,EAAgBjF,EAAWqF,GACzD3J,MAAMiI,GAEN1R,KAAK4M,SAAWA,EAChB5M,KAAKoV,IAAMA,EACXpV,KAAKgT,eAAiBA,EACtBhT,KAAK+N,UAAYA,EACjB/N,KAAKoT,MAAQA,EAEbpT,KAAK6R,QAAU,GACf7R,KAAK8R,QAAU,GACf9R,KAAK+R,QAAU,GACf/R,KAAKgS,QAAU,EAChB,CAED,MAAA9O,GACE,KAAMlD,KAAKoV,IAAIjD,KAAOnS,KAAKoS,OAASpS,KAAKoV,IAAIhD,MAAQpS,KAAKmS,MACpDnS,KAAKoV,IAAI/C,IAAMrS,KAAKsS,QAAUtS,KAAKoV,IAAI9C,OAAStS,KAAKqS,KAAM,CAC/DrS,KAAKkW,YACLlW,KAAKiN,OAAOR,UAEZ,MAAM7E,EAAQ,GAEd,IAAK,IAAI5G,EAAI,EAAGA,EAAI4G,EAAO5G,IAAK,CAC9B,MAAMmV,EAAS,EAAM5O,KAAK6O,GAAKxO,EAAS5G,EAExChB,KAAKgT,eAAexF,aAClBxN,KAAKmS,KAAOnS,KAAK+R,QAAU,EAAK/R,KAAKqS,IAAMrS,KAAKgS,QAAU,EAC1D,IAAM,EAAK,EACO,GAAlBzK,KAAK8O,IAAIF,GAAuC,KAAvB5O,KAAKC,SAAW,IACvB,GAAlBD,KAAK+O,IAAIH,GAAuC,KAAvB5O,KAAKC,SAAW,IACzC,IAEH,CACF,CAEDiC,MAAMvG,QACP,ECtCY,MAAKqT,UAASN,EAC3B,WAAApW,CAAYwD,EAAMuJ,EAAU8E,EAAK0D,EAAKpC,EAAgBjF,EAAWqF,GAC/D3J,MAAMmD,EAAU8E,EAAK0D,EAAKpC,EAAgBjF,EAAWqF,GAErDpT,KAAKqD,KAAOA,CACb,CAED,SAAA6S,GACElW,KAAKqD,KAAKmT,KACX,ECRY,MAAKC,UAAShF,EAC3B,WAAA5R,CAAYwD,EAAMuJ,EAAU8E,EAAKqB,EAAaqC,EAAKpC,EAAgBjF,EACvDqF,GACV3J,MAAMiI,GAEN1R,KAAKqD,KAAOA,EACZrD,KAAK4M,SAAWA,EAChB5M,KAAK+S,YAAcA,EACnB/S,KAAKoV,IAAMA,EACXpV,KAAKgT,eAAiBA,EACtBhT,KAAK+N,UAAYA,EACjB/N,KAAKoT,MAAQA,EAEbpT,KAAK0W,KAAO,GACZ1W,KAAK2W,SAAW,EACjB,CAED,MAAA9B,GACE,MAAMiB,EAAS9V,KAAK0W,KAAKE,QAAO,CAACC,EAAMC,IAAQD,EAAOC,EAAIhB,QAAQ,GAElE,GAAIA,GAAU,EAAG,CACf,IAAK,MAAMiB,KAAW/W,KAAK2W,SACzBI,EAAQ9D,UAGVjT,KAAK+S,YAAY7F,YACflN,KAAKgX,eAAgBhX,KAAKiX,eAAgB,GAAS,EAAK,EACxD,IAAIV,EAAcvW,KAAKqD,KAAMrD,KAAK4M,SAAU5M,KAAK0R,IAAK1R,KAAKoV,IACzCpV,KAAKgT,eAAgBhT,KAAK+N,UAAW/N,KAAKoT,QAG9DpT,KAAKoT,MAAM3C,KAAK,SAAU,IAAK,IAAK,GAEpCzQ,KAAK+N,UAAUqB,SAAW,IAChC,KAAW,CACL,IAAID,EAAO,QAEX,IAAK,IAAInO,EAAI,EAAGA,EAAIuG,KAAKqN,IAAI,GAAIkB,GAAS9U,IACxCmO,GAAQ2G,EAAS9U,EAAI,IAAM,IAG7BhB,KAAK+N,UAAUqB,SAAWpP,KAAK+N,UAAU6B,sBACvC,IAAKT,EAAM,GAEd,CACF,EC9CY,MAAK+H,UAASzF,EAC3B,WAAA5R,CAAY6R,EAAKsB,GACfvJ,MAAMiI,GAEN1R,KAAKgT,eAAiBA,CACvB,CAED,OAAAC,GACEjT,KAAKiN,OAAOR,UAEZ,IAAK,IAAIzL,EAAI,EAAGA,EAAI,GAAIA,IACtBhB,KAAKgT,eAAexF,aAClBxN,KAAKmS,KAAO5K,KAAKC,SAAWxH,KAAK+R,QACjC/R,KAAKqS,IAAM9K,KAAKC,SAAWxH,KAAKgS,QAChC,EAAK,GAAK,IACc,KAAvBzK,KAAKC,SAAW,IAAqC,KAAvBD,KAAKC,SAAW,IAC/C,KAGL,ECnBY,MAAK2P,UAAS1F,EAC3B,WAAA5R,CAAY6R,EAAK/D,EAAIC,EAAIwH,EAAKpC,GAC5BvJ,MAAMiI,GAEN1R,KAAK2N,GAAKA,EACV3N,KAAK4N,GAAKA,EAEV5N,KAAKoV,IAAMA,EACXpV,KAAKgT,eAAiBA,EAEtBhT,KAAK6R,QAAU,GACf7R,KAAK8R,QAAU,GACf9R,KAAK+R,QAAU,GACf/R,KAAKgS,QAAU,GAEfhS,KAAKiS,MAAQ,EACbjS,KAAKoX,MAAQ,EAEbpX,KAAKkS,kBAAmB,CACzB,CAED,MAAAhP,GAGE,GAFAuG,MAAMvG,SAEFlD,KAAKuS,SAGP,OAFAvS,KAAKiN,OAAOR,eACZzM,KAAKiT,UAIP,MAAM5T,EAAOkI,KAAKC,SAAW,GAEvBiG,EAAIpO,EAAO,GAAM,EACjBqO,EAAIrO,EAAO,IAAO,IAClB4C,EAAI5C,EAAO,GAAM,IAEnBkI,KAAKC,SAAW,IAClBxH,KAAKgT,eAAexF,aAClBxN,KAAKmS,KAAOnS,KAAK+R,QAAU,GAAOxK,KAAKC,SAAW,IAAOxH,KAAK+R,QAC9D/R,KAAKqS,IAAMrS,KAAKgS,QAAU,GAAOzK,KAAKC,SAAW,IAAOxH,KAAKgS,QAC7DvE,EAAGC,EAAGzL,EACN,EAAK,EACL,KAIEjC,KAAKoV,IAAIjD,KAAOnS,KAAKoS,OAASpS,KAAKoV,IAAIhD,MAAQpS,KAAKmS,MACxDnS,KAAKoV,IAAI/C,IAAMrS,KAAKsS,QAAUtS,KAAKoV,IAAI9C,OAAStS,KAAKqS,MACrDrS,KAAKoV,IAAIP,SACT7U,KAAKiN,OAAOR,UACZzM,KAAKiT,WAGPjT,KAAKoI,EAAIb,KAAKE,MAAMzH,KAAKoI,GACzBpI,KAAKqI,EAAId,KAAKE,MAAMzH,KAAKqI,EAC1B,CAED,OAAA4K,GACE,IAAK,IAAIjS,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAM3B,EAAOkI,KAAKC,SAAW,GAEvBiG,EAAIpO,EAAO,GAAM,EACjBqO,EAAIrO,EAAO,IAAO,IAClB4C,EAAI5C,EAAO,GAAM,IAEvBW,KAAKgT,eAAexF,aAClBxN,KAAKmS,KAAO5K,KAAKC,SAAWxH,KAAK+R,QACjC/R,KAAKqS,IAAM9K,KAAKC,SAAWxH,KAAKgS,QAChCvE,EAAGC,EAAGzL,EACkB,KAAvBsF,KAAKC,SAAW,IAAqC,KAAvBD,KAAKC,SAAW,IAC/C,IAEH,CACF,ECvEY,MAAK6P,UAASH,EAC3B,WAAArX,CAAY6R,EAAK4F,EAAMlC,EAAKrC,EAAaC,EAAgBI,GACvD3J,MAAMiI,EAAKsB,GAEXhT,KAAKsX,KAAOA,EACZtX,KAAKoV,IAAMA,EACXpV,KAAK+S,YAAcA,EACnB/S,KAAKoT,MAAQA,EAEbpT,KAAK6R,QAAU,EACf7R,KAAK8R,QAAU,EACf9R,KAAK+R,QAAU,GACf/R,KAAKgS,QAAU,GAEfhS,KAAKmW,MAAQ,EAEbnW,KAAK8V,OAAS,EAEd9V,KAAKkS,kBAAmB,EAExBlS,KAAKuX,YAAc,IAAI3U,EAAM,KAAuB,IAAhB2E,KAAKC,UAAiB,KACxDxH,KAAKwX,QACLxX,KAAKuX,YAAY1U,QAAU,KAAuB,IAAhB0E,KAAKC,QAAe,IACrD,EACJ,CAED,IAAA2E,CAAKc,GACHxD,MAAM0C,KAAKc,GAEXjN,KAAKsV,MAAQtV,KAAKoI,EAClBpI,KAAKuV,MAAQvV,KAAKqI,EAAI,EACvB,CAED,MAAAnF,GACElD,KAAKuX,YAAYrU,SAEjBlD,KAAKmW,MAAQ5O,KAAKkQ,MACfzX,KAAKoV,IAAI/C,IAAMrS,KAAKoV,IAAIpD,QAAU,GAAMhS,KAAKuV,MAAQvV,KAAKgS,QAAU,GACpEhS,KAAKoV,IAAIjD,KAAOnS,KAAKoV,IAAIrD,QAAU,GAAM/R,KAAKsV,MAAQtV,KAAK+R,QAAU,IAGxE/R,KAAKoI,EAAIpI,KAAKsV,MAA+B,GAAvB/N,KAAK8O,IAAIrW,KAAKmW,OACpCnW,KAAKqI,EAAIrI,KAAKuV,MAA+B,GAAvBhO,KAAK+O,IAAItW,KAAKmW,OAEpC1M,MAAMvG,SAEAlD,KAAKoV,IAAIjD,KAAOnS,KAAKoS,OAASpS,KAAKoV,IAAIhD,MAAQpS,KAAKmS,MACxDnS,KAAKoV,IAAI/C,IAAMrS,KAAKsS,QAAUtS,KAAKoV,IAAI9C,OAAStS,KAAKqS,KACrDrS,KAAKoV,IAAIP,QAEZ,CAED,KAAA2C,GACE,MAAM7J,EAA4B,GAAvBpG,KAAK8O,IAAIrW,KAAKmW,OACnBvI,EAA4B,GAAvBrG,KAAK+O,IAAItW,KAAKmW,OAEzBnW,KAAK+S,YAAY7F,YACflN,KAAKmS,KAAOnS,KAAK+R,QAAU,EAAI,GAAI/R,KAAKqS,IAAMrS,KAAKgS,QAAU,EAAI,GACjE,GAAc,EAAK,EACnB,IAAImF,EAAOnX,KAAK0R,IAAK/D,EAAIC,EAAI5N,KAAKoV,IAAKpV,KAAKgT,gBAE/C,CAED,QAAAJ,GAYE,OAXA5S,KAAK8V,SACL9V,KAAKsX,KAAKzC,SAEV7U,KAAKiN,OAAOT,QAERxM,KAAK8V,QAAU,IACjB9V,KAAKiT,UAELjT,KAAKoT,MAAM3C,KAAK,SAAU,IAAK,IAAK,MAG/B,CACR,EC9EY,MAAKiH,UAASzB,EAC3B,SAAAC,GACElW,KAAKoV,IAAI/B,UAAUC,YAAa,EAEhCtT,KAAK+N,UAAUmB,UAAYlP,KAAK+N,UAAU6B,sBACxC,IAAK,2BAA4B,GAAI,EAAe,EAAG,MAGzD5P,KAAK+N,UAAUqB,SAAWpP,KAAK+N,UAAU6B,sBACvC,IAAK,wCAAyC,GAAI,EAClD,KAAM,MAGR5P,KAAKoT,MAAMjD,MAAM,2BAClB,ECdY,MAAKwH,UAAS1B,EAC3B,SAAAC,GACElW,KAAKoV,IAAI/B,UAAUE,WAAY,EAE/BvT,KAAK+N,UAAUmB,UAAYlP,KAAK+N,UAAU6B,sBACxC,IAAK,0BAA2B,GAAI,EAAe,EAAG,MAGxD5P,KAAK+N,UAAUqB,SAAWpP,KAAK+N,UAAU6B,sBACvC,IAAK,kBAAmB,GAAI,EAAe,KAAM,MAGnD5P,KAAKoT,MAAMjD,MAAM,0BAClB,ECbY,MAAKyH,UAAS3B,EAC3B,SAAAC,GACElW,KAAKoV,IAAI/B,UAAUG,YAAa,EAEhCxT,KAAK+N,UAAUmB,UAAYlP,KAAK+N,UAAU6B,sBACxC,IAAK,2BAA4B,GAAI,EAAe,EAAG,MAGzD5P,KAAK+N,UAAUqB,SAAWpP,KAAK+N,UAAU6B,sBACvC,IAAK,yBAA0B,GAAI,EAAe,KAAM,MAG1D5P,KAAKoT,MAAMjD,MAAM,2BAClB,ECbY,MAAK0H,UAAS5B,EAC3B,SAAAC,GACElW,KAAKoV,IAAI/B,UAAUI,eAAgB,EAEnCzT,KAAK+N,UAAUmB,UAAYlP,KAAK+N,UAAU6B,sBACxC,IAAK,8BAA+B,GAAI,EAAe,EAAG,MAG5D5P,KAAK+N,UAAUqB,SAAWpP,KAAK+N,UAAU6B,sBACvC,IAAK,kBAAmB,GAAI,EAAe,KAAM,MAGnD5P,KAAKoT,MAAMjD,MAAM,8BAClB,ECbY,MAAK2H,UAAS7B,EAC3B,SAAAC,GACElW,KAAKoV,IAAI/B,UAAUK,WAAY,EAE/B1T,KAAK+N,UAAUmB,UAAYlP,KAAK+N,UAAU6B,sBACxC,IAAK,0BAA2B,GAAI,EAAe,EAAG,MAGxD5P,KAAK+N,UAAUqB,SAAWpP,KAAK+N,UAAU6B,sBACvC,IAAK,+BAAgC,GAAI,EAAe,KAAM,MAGhE5P,KAAKoT,MAAMjD,MAAM,0BAClB,ECbY,MAAK4H,UAAS9B,EAC3B,SAAAC,GACElW,KAAKoV,IAAInG,QACTjP,KAAKoV,IAAIjB,cAETnU,KAAKoT,MAAMjD,MAAM,mBAClB,ECOY,MAAA6H,EACb,WAAAnY,CAAYwD,EAAMuJ,EAAUmG,EAAaI,EAAOH,EAAgBjF,EACpDqF,GACV,MAAMgC,EAAM,IAAIlC,EAAI7P,EAAMuJ,EAAU5M,KAAM+S,EAAaI,EACnCH,EAAgBjF,EAAWqF,GAE/CpT,KAAKsX,KAAO,IAAIb,EAAKpT,EAAMuJ,EAAU5M,KAAM+S,EAAaqC,EAAKpC,EACxCjF,EAAWqF,GAEhCpT,KAAKiY,MAAQ,GAEb,MAAMC,q8OAAWnI,MAAM,MAIvB,IAAK,IAAI1H,EAAI,EAAGA,EAAI6P,EAAK3N,OAAQlC,IAAK,CACpCrI,KAAKiY,MAAM3W,KAAK,IAEhB,IAAK,IAAI8G,EAAI,EAAGA,EAAI8P,EAAK7P,GAAGkC,OAAQnC,IAAK,CACvC,MAAM/I,EAAO6Y,EAAK7P,GAAGD,GAErB,IAAIiD,EAAI,KACJC,EAAI,EACJW,EAAa,KAEb8K,EAAU,KAEd,OAAQ1X,GACR,IAAK,IACHgM,EAAI,EACJ,MACF,IAAK,IACHA,EAAI,EACJ,MACF,IAAK,IACHA,EAAI,EACJC,EAAI,EACJW,EAAa,IAAI+I,EAAMpI,EAAU5M,KAAMgT,GACvC,MACF,IAAK,IACHD,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAS,EAAK,EAChD,IAAI8M,EAAKvI,EAAU5M,KAAMoV,EAAKpC,EAAgBI,IAEhD,MACF,IAAK,IACHL,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAI,EAAG,GAAO,EAAK,EAClD,IAAIwN,EAASjJ,EAAU5M,KAAM+S,EAAaqC,EAAKpC,EAClCI,IAEf,MACF,IAAK,IACH2D,EAAU,IAAIG,EAAYlX,KAAMgT,GAChCD,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAO,EAAK,EAAK0O,GAErD/W,KAAKsX,KAAKX,SAASrV,KAAKyV,GACxB,MACF,IAAK,KACHA,EAAU,IAAIG,EAAYlX,KAAMgT,GAChCD,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAO,EAAK,EAAK0O,GAErD/W,KAAKsX,KAAKX,SAASrV,KAAKyV,GACxB,MACF,IAAK,IACHA,EAAU,IAAIG,EAAYlX,KAAMgT,GAChCD,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAO,EAAK,EAAK0O,GAErD/W,KAAKsX,KAAKX,SAASrV,KAAKyV,GACxB,MACF,IAAK,IACH,MAAMD,EAAM,IAAIO,EAAQrX,KAAMA,KAAKsX,KAAMlC,EAAKrC,EACtBC,EAAgBI,GACxCL,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAO,EAAK,EAAKyO,GAErD9W,KAAKsX,KAAKZ,KAAKpV,KAAKwV,GACpB,MACF,IAAK,IACH/D,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAS,EAAK,GAElD,MACF,IAAK,IACH0K,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAO,EAAK,EAAK+M,EACnD,CAAC,CAAC,EAAK,GAAM,CAAC,EAAK,GAAM,CAAC,EAAK,GAAM,CAAC,EAAK,KAE7C,MACF,IAAK,IACHrC,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAS,EAAK,EAChD,IAAIqP,EAAW9K,EAAU5M,KAAMoV,EAAKpC,EAAgBjF,EACrCqF,IAEjB,MACF,IAAK,IACHL,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAS,EAAK,EAChD,IAAIsP,EAAU/K,EAAU5M,KAAMoV,EAAKpC,EAAgBjF,EACrCqF,IAEhB,MACF,IAAK,IACHL,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAS,EAAK,EAChD,IAAIuP,EAAWhL,EAAU5M,KAAMoV,EAAKpC,EAAgBjF,EACrCqF,IAEjB,MACF,IAAK,IACHL,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAS,EAAK,EAChD,IAAIwP,EAAcjL,EAAU5M,KAAMoV,EAAKpC,EAAgBjF,EACrCqF,IAEpB,MACF,IAAK,IACHL,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAS,EAAK,EAChD,IAAIyP,EAAUlL,EAAU5M,KAAMoV,EAAKpC,EAAgBjF,EACrCqF,IAEhB,MACF,IAAK,IACHpT,KAAKsX,KAAKN,eAAiB,GAAc5O,EACzCpI,KAAKsX,KAAKL,eAAiB,GAAc5O,EACzC,MACF,IAAK,IACH0K,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAS,EAAK,EAChD,IAAI0P,EAAMnL,EAAU5M,KAAMoV,EAAKpC,EAAgBjF,EACrCqF,IAKJ,OAAN/H,GAMJ0H,EAAY7F,YACV,GAAc9E,EAAG,GAAcC,EAAG,GAAOgD,EAAGC,EAAGW,GAGjDjM,KAAKiY,MAAM5P,GAAG/G,KAAK2K,GAAc5M,IAT/BW,KAAKiY,MAAM5P,GAAG/G,KAAK,KAUtB,CACF,CACF,CAED,MAAAiR,CAAOnK,EAAGC,GACR,MAAM8P,EAAMnY,KAAKiY,MAAM1Q,KAAKqO,MAAMvN,EAAI,KAEtC,OAAK8P,EAIEA,EAAI5Q,KAAKqO,MAAMxN,EAAI,KAHjB,IAIV,CAED,SAAA8M,CAAU9M,EAAGC,EAAGhJ,GACd,MAAM8Y,EAAMnY,KAAKiY,MAAM1Q,KAAKqO,MAAMvN,EAAI,KAEjC8P,IAILA,EAAI5Q,KAAKqO,MAAMxN,EAAI,KAAgB/I,EACpC,CAED,cAAAmT,CAAepK,GACb,OAA2C,IAAnCb,KAAKqO,MAAMxN,EAAI,IAAe,GAAmBA,CAC1D,CAED,cAAAqK,CAAerK,GACb,OAAOA,EAAkC,GAA9Bb,KAAKqO,MAAMxN,EAAI,GAC3B,EClMY,MAAAgQ,EACb,WAAAvY,CAAYwD,EAAM8P,EAAOpF,EAAWqF,GAClCpT,KAAKqD,KAAOA,EACZrD,KAAKmT,MAAQA,EACbnT,KAAK+N,UAAYA,EACjB/N,KAAKoT,MAAQA,EAEbrF,EAAUmB,UAAYnB,EAAU6B,sBAC9B,EAAG,MAAO,IAAK,GAGjB7B,EAAUqB,SAAWrB,EAAU6B,sBAC7B,IAAK,uBAAwB,GAAI,EAAe,KAGlD5P,KAAK0F,QAAS,EACd1F,KAAKqY,SAAU,EAEfrY,KAAKuO,MAAQ,IAAI3L,EAAM,IACxB,CAED,MAAAM,GACElD,KAAKuO,MAAMrL,SAENlD,KAAK0F,SACR1F,KAAK0F,QAAS,GAGZ1F,KAAKmT,MAAM3K,YAAY,MAAcxI,KAAKuO,MAAMtL,UAClDjD,KAAK+N,UAAUmB,UAAY,KAC3BlP,KAAK+N,UAAUqB,SAAW,KAE1BpP,KAAKqD,KAAKkO,QAEb,EClCY,MAAA+G,EACb,WAAAzY,CAAYwD,EAAM8P,EAAOpF,EAAWqF,GAClCpT,KAAKqD,KAAOA,EACZrD,KAAKmT,MAAQA,EACbnT,KAAK+N,UAAYA,EACjB/N,KAAKoT,MAAQA,EAEbrF,EAAUmB,UAAYnB,EAAU6B,sBAC9B,GAAI,kBAAmB,GAAI,GAG7B7B,EAAUqB,SAAWrB,EAAU6B,sBAC7B,IAAK,kBAAmB,GAAI,EAAe,KAG7C5P,KAAK0F,QAAS,EACd1F,KAAKqY,SAAU,EAEfrY,KAAKuO,MAAQ,IAAI3L,EAAM,IACxB,CAED,MAAAM,GACElD,KAAKuO,MAAMrL,SAENlD,KAAK0F,SACR1F,KAAKoT,MAAMjD,MAAM,mBAEjBnQ,KAAK0F,QAAS,GAGZ1F,KAAKmT,MAAM3K,YAAY,MAAcxI,KAAKuO,MAAMtL,UAClDjD,KAAK+N,UAAUmB,UAAY,KAC3BlP,KAAK+N,UAAUqB,SAAW,KAE1BpP,KAAKqY,SAAU,EAElB,ECpCY,MAAAE,EACb,WAAA1Y,CAAYwD,EAAM8P,EAAOpF,EAAWqF,GAClCpT,KAAKqD,KAAOA,EACZrD,KAAKmT,MAAQA,EACbnT,KAAK+N,UAAYA,EACjB/N,KAAKoT,MAAQA,EAEbrF,EAAUmB,UAAYnB,EAAU6B,sBAC9B,GAAI,6BAA8B,GAAI,GAGxC7B,EAAUqB,SAAWrB,EAAU6B,sBAC7B,IAAK,2BAA4B,GAAI,EAAe,KAGtD5P,KAAKoT,MAAMjD,MAAM,6BAEjBnQ,KAAKqY,SAAU,EAEfrY,KAAKuO,MAAQ,IAAI3L,EAAM,KACxB,CAED,MAAAM,GACElD,KAAKuO,MAAMrL,SAEPlD,KAAKmT,MAAM3K,YAAY,MAAcxI,KAAKuO,MAAMtL,UAClDjD,KAAK+N,UAAUmB,UAAY,KAC3BlP,KAAK+N,UAAUqB,SAAW,KAE1BpP,KAAKqD,KAAKmV,OACVxY,KAAKqY,SAAU,EAElB,EClCY,MAAAI,EACb,WAAA5Y,CAAYwD,EAAM8P,EAAOpF,EAAWqF,GAClCpT,KAAKqD,KAAOA,EACZrD,KAAKmT,MAAQA,EACbnT,KAAK+N,UAAYA,EACjB/N,KAAKoT,MAAQA,EAEbrF,EAAUmB,UAAYnB,EAAU6B,sBAC9B,GAAI,wBAAyB,GAAI,GAGnC7B,EAAUqB,SAAWrB,EAAU6B,sBAC7B,IAAK,kBAAmB,GAAI,EAAe,KAG7C5P,KAAKoT,MAAMjD,MAAM,wCAEjBnQ,KAAKqY,SAAU,CAChB,CAED,MAAAnV,GAAW,EClBb,MAAMG,GAAO,ICWE,MACb,WAAAxD,GACEG,KAAK4M,SAAW,IAAIxJ,EAASpD,MAC7BA,KAAKmT,MAAQ,IAAI3I,EAEjBxK,KAAK+S,YAAc,IAAIpG,EAAY3M,KAAK4M,UACxC5M,KAAKgT,eAAiB,IAAI5F,EAAepN,KAAK4M,UAC9C5M,KAAK+N,UAAY,IAAIa,EAAU5O,KAAK4M,UACpC5M,KAAKoT,MAAQ,IAAIpD,EAEjBhQ,KAAKwY,OAELxY,KAAK+O,MAAQ,IAAIqJ,EAAMpY,KAAMA,KAAKmT,MAAOnT,KAAK+N,UAAW/N,KAAKoT,OAE9DpT,KAAK0Y,cAAgB,EACrB1Y,KAAK2Y,gBAAkB,EAEvB3Y,KAAK0F,QAAS,EAEd1F,KAAK4Y,iBAAmB,IAAIhW,EAAsB,IAAhB2E,KAAKC,UAAgB,KACrD,MAAMY,EAAIpI,KAAK4M,SAAShI,QAA0B,KAAhB2C,KAAKC,SACjCa,EAAIrI,KAAK4M,SAAS/H,QAA0B,IAAhB0C,KAAKC,SAEjCnI,EAAOkI,KAAKC,SAElB,IAAIiG,EAAI,EACJC,EAAI,EACJzL,EAAI,EAEJ5C,EAAO,KACToO,EAAI,IACJC,EAAI,IACJzL,EAAI,KACK5C,EAAO,KAChBoO,EAAI,EACJC,EAAI,GACJzL,EAAI,KACK5C,EAAO,IAChBoO,EAAI,EACJC,EAAI,EACJzL,EAAI,KACK5C,EAAO,KAChBoO,EAAI,IACJC,EAAI,EACJzL,EAAI,KACK5C,EAAO,KAChBoO,EAAI,GACJC,EAAI,IACJzL,EAAI,KAEJwL,EAAI,EACJC,EAAI,IACJzL,EAAI,KAGN,IAAK,IAAIjB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMmV,EAAS,EAAM5O,KAAK6O,GAAK,GAAMpV,EAErChB,KAAKgT,eAAexF,aAClBpF,EAAGC,EACHoF,EAAGC,EAAGzL,EACY,GAAlBsF,KAAK8O,IAAIF,GAAuC,KAAvB5O,KAAKC,SAAW,IACvB,GAAlBD,KAAK+O,IAAIH,GAAuC,KAAvB5O,KAAKC,SAAW,IACzC,IAEH,CAEDxH,KAAKoT,MAAM3C,KAAK,WAAY,IAAK,IAAK,IAEtCzQ,KAAK4Y,iBAAiB/V,QAA0B,IAAhB0E,KAAKC,QAAc,IAClD,GAEHxH,KAAK4Y,iBAAiB3V,SAAU,CACjC,CAED,IAAAuV,GACExY,KAAK+S,YAAY5P,QAEjBnD,KAAK0R,IAAM,IAAIsG,EAAIhY,KAAMA,KAAK4M,SAAU5M,KAAK+S,YAAa/S,KAAKmT,MAC5CnT,KAAKgT,eAAgBhT,KAAK+N,UAAW/N,KAAKoT,MAC9D,CAED,MAAAlQ,CAAO2V,GACL,MAAMC,EAAYD,EAAY7Y,KAAK0Y,cAGnC,GAFA1Y,KAAK0Y,cAAgBG,IAEjBC,EAAY,MAMhB,IAFA9Y,KAAK2Y,iBAAmBG,EAEjB9Y,KAAK2Y,iBAA4B,IAAA,IAClC3Y,KAAK0F,SACP1F,KAAKmT,MAAMjQ,SAENlD,KAAK+O,MAAMsJ,SAGdrY,KAAK4Y,iBAAiB1V,SACtBlD,KAAK+S,YAAY7P,UAHjBlD,KAAK+O,MAAM7L,SAMblD,KAAKgT,eAAe9P,SACpBlD,KAAK+N,UAAU7K,SAEflD,KAAK4M,SAAS1J,UAGhBlD,KAAK2Y,uBAER,CAED,MAAAI,GACE/Y,KAAK4M,SAAS1F,QAEdlH,KAAK+S,YAAYrL,OACjB1H,KAAKgT,eAAetL,OACpB1H,KAAK+N,UAAUrG,MAChB,CAED,KAAA6J,GACEvR,KAAK+O,MAAQ,IAAIuJ,EAAMtY,KAAMA,KAAKmT,MAAOnT,KAAK+N,UAAW/N,KAAKoT,MAC/D,CAED,IAAA0B,GACE9U,KAAK+O,MAAQ,IAAIwJ,EAASvY,KAAMA,KAAKmT,MAAOnT,KAAK+N,UAAW/N,KAAKoT,OACjEpT,KAAK+S,YAAY7P,QAClB,CAED,GAAAsT,GACExW,KAAK+O,MAAQ,IAAI0J,EAAQzY,KAAMA,KAAKmT,MAAOnT,KAAK+N,UAAW/N,KAAKoT,OAChEpT,KAAK4Y,iBAAiB3V,SAAU,CACjC,GD9IG+V,GAAaH,IACjBI,sBAAsBD,IAEtB3V,GAAKH,OAAO2V,GACZxV,GAAK0V,QAAQ,EAGfE,sBAAsBD"}